#############################################################################
##
#W  pperm.tst
#Y  Copyright (C) 2011-12                                James D. Mitchell
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

gap> START_TEST("Citrus package: pperm.tst");
gap> LoadPackage("citrus", false);;

gap> InfoLevelInfoWarning:=InfoLevel(InfoWarning);;
gap> InfoLevelInfoCitrus:=InfoLevel(InfoCitrus);;
gap> SetInfoLevel(InfoWarning, 0);;
gap> SetInfoLevel(InfoCitrus, 0);

gap> f:=PartialPermNC([0,1,0,20]);
[ 2, 4 ] -> [ 1, 20 ]
gap> InternalRepOfPartialPerm(f);
[ 4, 2, 1, 20, 1, 20, 0, 1, 0, 20, 2, 4, 1, 20, 0, 0 ]
gap> f^2;
<empty mapping>
gap> f^-1;
[ 1, 20 ] -> [ 2, 4 ]
gap> f:=PartialPermNC([0,20,0,1]); 
[ 2, 4 ] -> [ 20, 1 ]
gap> f^2;
<empty mapping>
gap> f^-1;
[ 1, 20 ] -> [ 4, 2 ]
gap> RangeSetOfPartialPerm(f^-1);
[ 2, 4 ]
gap> RangeSetOfPartialPerm(f);   
[ 1, 20 ]
gap> f^-1<f;
true
gap> f<f^-1;
false
gap> f:=PartialPermNC([2,4], [20,1]);
[ 2, 4 ] -> [ 20, 1 ]
gap> f^-1=f;
false
gap> f=f^-1;
false
gap> f^-1;
[ 1, 20 ] -> [ 4, 2 ]
gap> f*f^-1;
<identity on [ 2, 4 ]>
gap> f^-1*f;   
<identity on [ 1, 20 ]>
gap> f^2;
<empty mapping>
gap> f:=[PartialPermNC([ 1, 2, 5 ], [ 1, 7, 4 ]), 
> PartialPermNC([ 1, 2, 3, 4, 8 ], [ 1, 7, 5, 6, 8 ]),
> PartialPermNC([ 1, 2, 4, 5, 7 ], [ 3, 4, 5, 2, 7 ]),
> PartialPermNC([ 1, 2, 3, 5, 6, 7 ], [ 5, 2, 6, 8, 1, 7 ])];;
gap> f[1]*f[2];
[ 1, 5 ] -> [ 1, 6 ]
gap> f[1]*f[2]*f[3]; 
[ 1 ] -> [ 3 ]
gap> f[4]*f[1]*f[3];
[ 1, 2, 6 ] -> [ 5, 7, 3 ]
gap> f[4]^4;
[ 2, 3, 7 ] -> [ 2, 8, 7 ]
gap> f[4]^5;
<identity on [ 2, 7 ]>
gap> f[4]^10;
<identity on [ 2, 7 ]>
gap> f[4]^-4; 
[ 2, 7, 8 ] -> [ 2, 7, 3 ]
gap> 

gap> f:=ReadCitrus("pkg/citrus/examples/inverse.citrus.gz", 1)[1];
<partial perm on 6326 pts>
gap> f^6*f^-6=LeftOne(f);
false
gap> f^6*f^-6=LeftOne(f^6);
true
gap> (f^-1)^6=f^-6;
true
gap> (f^-1)^16=f^-16;
true
gap> i:=7541;;
gap> i in DomPP(f);
false
gap> i^f;
fail
gap> i:=9912;;
gap> i in DomPP(f);
true
gap> i^f;
3545
gap> i^f in RanPP(f);
true
gap> (i^f)^(f^-1);
9912
gap> ForAll(DomPP(f), i-> (i^f)^(f^-1)=i);
true
gap> f:=RandomPartialPerm(10000);
<partial perm on 6318 pts>
gap> ForAll(DomPP(f), i-> (i^f)^(f^-1)=i);
true
gap> ForAll(RanSetPP(f), i-> (i^(f^-1))^f=i);     
true
gap> f:=RandomPartialPerm(10000);
<partial perm on 6344 pts>
gap> ForAll(RanSetPP(f), i-> (i^(f^-1))^f=i);
true
gap> p:=Random(SymmetricGroup(6));  
(1,3,2)(4,5)
gap> f:=PartialPermNC([ 1, 3, 4, 5, 6, 7, 9, 10 ], [ 6, 1, 4, 9, 2, 3, 7, 5 ]);
gap> p*f;
[ 1, 2, 4, 5, 6, 7, 9, 10 ] -> [ 1, 6, 9, 4, 2, 3, 7, 5 ]
gap> f*p;
[ 1, 3, 4, 5, 6, 7, 9, 10 ] -> [ 6, 3, 5, 9, 1, 2, 7, 4 ]
gap> FixedPointsPP(f*p);
[ 3 ]
gap> f:=RandomPartialPerm(10000);
<partial perm on 6328 pts>
gap> p:=Random(SymmetricGroup(65000));
(1,11593,7641,26972,64116,20268,29456,36327,27628,11940,53819,7733,53565,5436,
63403,54962,60288,7811,16382,19546,39190,17127,17820,38686,46582,15104,1257,
43937,9572,36564,18252,39927,38668,47247,9302,4142,34963,40844,30801,56701,
4316,3078,58163,52754,56481,29076,23154,5695,31117,48602,6806,37982,60563,
6285,64967,31028,20668,22947,46880,63465,53520,47352,30939,40636,22546,49304,
36589,50708,64542,5292,35233,19187,58635,21139,47638,27184,38320,40214,46717,
42718,48529,4499,58535,59027,3265,26989,54375,47771,40897,14825,44941,48548,
9009,62694,42331,46453,40082,35008,19289,57272,62743,12172,34434,59049,37562,
6664,23348,31646,54453,36922,39456,9435,1884,12039,6323,28312,35334,15350,
10460,34254,53286,59804,51838,25078,21242,52034,33120,6016,37967,47939,20367,
12843,3147,6824,36503,49827,16877,38789,18729,7781,29935,13157,7537,5109,
45626,36369,14910,8431,25369,45298,61408,1831,51779,59567,21839,1561,45283,
35147,3372,1807,43333,6805,6109,688,34295,11557,12534,18070,5056,18579,558,
53519,31700,2611,45199,38158,49322,26227,34347,1659,63725,13372,36364,50502,
2056,55225,18840,38921,43970,6117,52159,3133,46063,34476,11875,52380,25469,
55586,1246,24887,27234,28837,63988,49368,60313,51925,22094,63318,21108,39933,
16574,55003,10191,18023,51115,17949,17671,19981,27068,34186,5881,30717,64050,
26852,23155,62808,43146,35024,35111,55608,44929,46950,46736,47749,37737,34139,
63466,54024,9326,5572,39081,33480,52447,63881,35987,18333,6665,59509,51289,
10635,15273,1776,31842,62009,45620,2652,42162,6439,46512,39894,18596,229,
33094,42503,23793,32371,6343,15784,35038,44813,41052,30809,35304,38066,13622,
31778,54691,42280,39281,36806,52815,43297,18542,22856,20031,19221,61826,4690,
33059,1788,34066,58630,27032,54435,48394,18711,867,42871,19385,39387,10699,
53919,31655,2410,55861,45977,30040,1528,59228,39809,49908,11400,62235,7570,
40232,30075,38852,9788,34609,41873,17893,63235,26009,5727,36717,23724,19834,
54525,19453,11024,62769,14220,5186,52811,11037,61985,26144,8209,14285,46677,
24583,26554,33262,64203,38806,22355,36423,40507,50860,19383,56880,38976,56130,
24729,2747,13133,12948,48667,5560,64529,59367,44666,15632,47403,59447,36738,
59857,19706,41121,51450,6731,41844,21312,13241,60792,15882,10359,4130,49787,
41376,49690,31847,5878,16217,8950,45941,58979,7928,58563,62886,53147,20647,
64838,52839,6920,19168,48039,2391,64109,28374,26918,46999,12966,34847,21714,
54602,42848,7305,7665,24749,59293,52089,16888,48901,5710,36325,39368,604,
21186,21011,20415,45351,9254,22487,13736,11238,41005,5317,51425,31319,17095,
30298,24669,27241,22677,58668,7105,19333,41899,2163,5517,46563,21610,46172,
21278,2383,14044,62327,36097,22913,3328,34308,55498,33073,3383,54398,63586,
17713,46524,55348,11300,6328,53075,44843,14231,22580,4717,29460,38515,8989,
64941,29519,55195,39739,46075,45986,28471,4080,51169,4686,38935,50433,48638,
38746,59765,63339,60299,53087,52831,57573,22692,29604,36033,13344,57466,39733,
44874,5923,32476,20967,25319,40099,474,45771,42109,52695,6192,18633,40966,
47933,27058,40627,33829,46877,56755,46472,14861,22940,20900,57164,44196,5927,
47873,14498,58887,19032,28852,32089,35326,10812,30631,4268,19966,19967,35963,
18716,52880,63358,42548,45347,5333,54801,2778,34015,47680,31788,4322,58399,
62933,29380,53394,15771,7366,34440,15961,32672,15422,33918,35409,15131,26608,
39995,19014,50772,25871,61163,24092,4288,8032,41115,58771,43007,12192,15509,
4264,674,43023,25191,16880,17050,53920,15026,51378,3149,38092,32487,13453,
60336,23050,63717,15032,16295,7881,13029,12163,59642,27612,30813,26174,63710,
58430,26186,59504,9098,33799,59540,15922,61756,1774,49708,41205,30943,45958,
32627,19370,62041,56329,38528,50197,37795,35367,7354,20270,42480,7528,16231,
44247,4126,45483,25979,29757,57814,57136,7561,37887,35113,24858,43665,52475,
8116,8956,12916,20043,27753,28824,50756,42635,19821,20927,8766,63597,41007,
15950,21569,34472,31661,50005,5626,49178,10017,34775,9028,44416,40288,23721,
30177,59624,54073,17428,11054,6582,64366,55878,64796,18393,24788,50183,53994,
8410,2335,14523,56525,13801,23325,21702,38649,47924,54489,53161,39347,13816,
16094,54180,4324,48214,42740,46083,13943,20966,16369,9649,42873,8794,27641,
18051,34895,26586,46125,19501,23956,64113,27638,35649,59678,35489,41327,57171,
50135,29370,55491,54930,6024,44986,35851,10092,22852,21462,54831,3309,58432,
1510,49702,53889,27791,14240,10726,4359,60223,62597,22163,42511,18774,24503,
61114,31782,705,10132,64233,64196,29397,49516,48836,28349,7280,33640,33426,
8024,50292,3040,30735,56453,42899,39073,47905,12531,62075,32959,33138,50456,
1571,44766,11180,50115,41545,61375,42425,7873,21449,19727,22517,17272,14486,
39252,46272,42653,9318,2309,24554,7213,17842,33310,57010,18339,42261,51124,
35342,39216,3454,49253,11690,14522,48363,21219,45592,45722,24093,41401,4792,
8336,34025,34964,59814,35638,42927,27961,58780,30158,21531,22731,14733,36997,
24136,55901,48831,55915,30296,21241,43751,8938,44960,60045,2796,30678,25360,
9582,61082,22735,47696,62907,29134,1376,27424,9088,33465,51552,35371,31144,
62657,4257,29013,12339,36173,12634,12264,32084,61635,53595,14951,12973,11653,
23739,33171,45417,59466,17082,35651,13586,58245,16652,29098,10055,3648,1463,
53428,43136,19062,11708,8399,9425,34593,2943,7360,23790,13207,1358,14623,
58893,36661,55992,61405,53369,60852,36819,2595,35534,59351,25529,36344,8703,
36434,42044,53754,44706,44804,61177,57603,39643,36262,27256,43612,10654,53568,
23232,20959,19371,6161,52943,14270,50596,5587,33785,9623,3207,8231,36092,
50841,39566,48048,7066,35567,61181,2840,61188,45770,23040,35121,55014,22066,
9328,44967,38364,42449,26156,37167,41672,27951,2607,37953,60247,45383,57985,
35744,54844,56584,35139,54090,56888,26528,38749,25861,14716,40077,9642,32277,
26790,37138,5486,60988,41497,10215,41918,28799,37726,36095,25734,12911,47131,
53215,41712,50800,26249,45412,38657,37182,55747,13280,14892,13655,9684,38355,
51468,27430,38720,38963,147,43149,33435,12529,55056,45583,20523,37636,35246,
4796,46033,44705,8533,39786,46024,62101,46968,24977,22698,50,32626,7453,17719,
30777,36727,51747,2303,53151,62264,25971,29288,1109,29214,53640,48941,33278,
43613,16686,9467,11221,29607,45268,10393,10401,26766,59494,940,42667,60161,
58495,7472,55656,59038,15857,4011,42301,9301,30545,8833,10159,62772,52131,
54768,4280,55725,3446,23612,42006,3805,61123,4487,23179,49187,3947,5377,36924,
55029,5645,25309,42305,26526,6230,15052,42411,13236,61591,3311,40111,5785,
54072,28044,43631,6973,51833,36090,8934,55284,11381,55152,52282,19843,56605,
49017,62590,19569,13713,30722,23827,26020,64792,39641,49988,26703,2620,16420,
42926,21354,38202,27838,26794,4752,58097,30570,26429,30556,51287,50579,13006,
40793,12401,41053,44533,50245,14829,3827,41987,47563,24280,36542,37628,43088,
61834,46247,45060,17308,35543,7820,14478,56884,61223,21069,60991,12235,17489,
61555,31549,5355,34924,26672,11919,32706,58026,25596,16691,46010,9144,55199,
48512,1756,14059,27944,26588,54771,44021,36064,4582,4699,46401,2921,4801,6208,
63644,18434,34081,55926,1165,11538,21984,29329,21440,1491,11743,25676,33353,
28153,45228,5205,57141,18259,60073,32125,46034,25343,50516,30562,39850,40233,
36269,48865,53780,19166,59122,45961,20657,8316,44387,46238,26070,40979,28880,
60274,22597,60576,28227,61068,38240,11489,54798,53102,13539,3190,954,31985,
33985,25848,61028,17626,53539,26025,38198,54191,50018,57976,23383,18328,64700,
50338,29029,16370,48309,22445,58197,23322,20924,58486,15224,19459,770,58039,
54159,32139,51787,24172,54315,28337,46296,47423,57885,9625,24109,46150,44949,
34803,11297,53505,10648,6284,64184,51332,60320,49087,61633,43015,18859,14350,
1997,25322,39153,63704,2502,46074,52688,24128,24080,22203,47955,10782,1388,
42734,3248,63572,48975,50293,19752,34732,60836,25512,30408,8484,33677,29034,
50178,54635,40420,6167,25803,45499,31647,23275,417,62812,48492,59470,47747,
17636,48764,49279,29417,39664,38711,40039,869,20232,35674,17076,583,12642,
32750,39630,19529,35203,58843,57211,29877,29753,28327,40264,32606,63472,50819,
46550,27107,53559,7048,17030,60895,31685,14516,12223,3929,20097,51845,14586,
44662,36150,31011,44905,46393,16120,29146,32919,26894,38241,7931,22494,9734,
354,38014,50305,48294,58750,30697,47763,33080,6769,29845,30872,50030,54406,
41055,30839,57647,7053,49245,51239,64263,34806,4256,9317,13924,62467,14738,
18490,43168,44171,27006,11989,39225,14602,26450,59133,57554,9579,25964,35931,
25395,9570,22409,2310,36165,36297,24880,13961,54795,60228,12357,22905,3512,
47713,10591,47366,24818,38040,22416,40709,35250,42639,57057,6985,16958,33394,
17016,26668,50623,64494,8921,525,18504,4662,60935,10516,49696,36877,24561,
15336,50941,63025,25775,25471,14448,61491,57980,43413,16532,18012,42221,14276,
9459,45926,35314,61162,50845,42671,58587,52456,60242,1150,23692,928,7274,
29222,15376,8803,6464,18892,41496,4202,64209,51861,8442,1770,49749,64265,
13036,16721,51370,427,57938,44014,3987,41898,51727,61525,53009,18686,53221,
531,49724,28884,47368,41943,53627,58118,63454,48070,44854,20511,63618,53160,
10883,34985,52295,55869,56045,32152,6068,44382,4504,55240,16940,57696,27530,
14468,28473,1273,55812,6794,12393,2617,21494,41252,7319,41402,39726,63122,
7024,52692,61204,17436,42993,24084,37838,20011,57999,54456,60843,21310,46684,
53789,55316,38573,30355,27483,39214,19675,27815,37200,27126,48003,10171,19594,
54482,2750,55204,36778,28161,63001,55299,14552,53236,3672,43721,19290,20565,
19987,33098,19336,58194,3653,29071,3854,54280,57089,768,48359,15090,19841,
29722,54095,3850,22128,11333,5877,51348,2116,10133,40391,37808,18758,48364,
3235,54064,61655,33762,64089,45817,41411,1174,6143,54701,49390,4559,51244,
35214,24995,62462,18479,29731,3011,7506,37683,19103,51091,45385,10022,34516,
25441,7880,32356,14171,9458,44181,58168,61263,25189,50261,51376,47845,55599,
41172,56255,14151,57935,969,20597,64921,59694,4787,26481,60090,49854,11289,
23626,59084,4614,6583,64540,2726,4673,2277,34765,23870,53016,314,48202,45664,
1731,49945,62959,41967,60990,52116,50778,38715,36083,44498,28498,60209,13292,
25315,33228,36786,11476,36531,6765,29602,32484,23891,27696,48798,16878,60119,
42463,42521,64895,25011,48348,46211,50226,53590,48018,32376,64401,47724,42104,
51607,45092,16953,37661,61944,10124,2797,36129,23042,22664,5410,40841,36259,
3292,62402,23197,73,31109,10546,14721,31340,29311,61255,12306,7622,35983,
16359,35999,37062,54990,54810,20537,4382,63408,3057,9219,64668,27036,15476,
26569,14764,38439,32200,61258,64556,44029,35888,33301,18951,29243,52792,819,
21838,62241,49632,64104,60202,53293,30182,23749,54137,40425,64595,23106,17716,
13515,41299,14041,35431,23199,6332,2315,64428,56096,38950,57269,17075,2735,
5022,50426,15812,50155,44704,48927,27863,7289,54516,26170,2988,39860,46687,
42782,30811,8376,51016,12495,421,61031,60437,32624,54309,52666,27559,21900,
18602,56838,54353,41004,44327,59884,8339,1131,21521,30997,57772,43111,29266,
56924,53423,39870,55089,7298,1863,64422,12410,58063,24495,43096,12992,34130,
41140,41539,40248,64426,13329,6240,40283,17021,24267,25611,51811,33618,60782,
33091,33240,44594,7677,14019,30054,4917,33474,38013,41174,64787,54540,39588,
59317,18708,56576,53856,55873,62705,34932,14018,22859,9452,8761,28558,58655,
54949,56152,56145,61185,14515,53103,24846,11931,33327,40594,2560,9746,25681,
33061,18401,17547,11970,6267,18099,2708,10364,38905,8873,11096,10475,54623,
63400,21258,10320,12500,16683,30523,2810,27956,59558,53024,37145,1823,35198,
42353,60778,19038,31426,61972,62990,37094,35036,40534,23290,52079,63753,61824,
2419,15359,41321,46864,8067,57561,21696,38818,2531,25492,27388,16100,57581,
61827,58376,31860,18998,23276,41310,58367,23433,63591,26570,16432,50291,33185,
8727,53894,48515,55094,57827,458,18627,26209,53917,20378,63181,48357,728,
26843,25020,44937,53999,6015,9355,30135,8348,675,50496,53613,47963,6508,25436,
28273,43984,4641,58307,40828,56369,32668,22475,54349,26200,43892,50459,53546,
33698,37899,31270,47787,52451,21220,55277,52835,8370,12474,43904,32076,27636,
3191,55653,39089,9149,45126,26194,30376,19473,48893,12485,55588,54447,50367,
55414,20217,52291,1167,29538,15306,28695,45423,46990,6785,15940,58334,16547,
6378,63463,30450,37015,30142,47994,43125,7433,9066,55313,33520,25267,47783,
5257,41733,4841,24757,1310,28974,45156,23773,32983,19925,10212,14446,31981,
57439,11141,11674,37507,9361,8279,3823,615,8329,36081,26695,56422,20431,56234,
5716,3660,18438,45945,32261,10541,4415,33885,62190,21409,1721,48044,13637,
50739,42644,35491,28691,30955,51090,46003,37704,23392,21014,34003,24908,33936,
19083,40246,52415,58650,24881,61545,38904,28923,47591,25624,51675,19755,50838,
59112,10702,46227,14596,64742,5062,26809,16794,56449,7004,52965,52084,60729,
59138,29373,25853,64395,49559,38332,6904,52009,49145,24688,29494,34669,17665,
584,33229,23649,41204,3956,18227,58758,10842,3054,28352,47188,59845,57426,
51472,4827,15260,31942,25887,55310,9849,36301,8742,62388,10929,56564,37892,
54606,1019,20461,9036,37702,51979,47327,42158,2263,12211,64848,14527,3664,
25082,25080,8182,33145,17270,8235,7900,25200,40845,10027,11777,39905,24991,
54282,37898,33992,4273,50088,3808,28878,3037,46617,16421,39911,33458,26908,
22609,50270,41102,28900,58914,27574,27464,34519,2519,38598,51347,15464,21975,
20919,29023,49458,42028,56336,36668,17361,57197,2859,62869,42036,59386,8088,
45579,8155,26985,19719,10439,54478,35153,27786,60146,14224,35778,29413,42265,
51379,57325,32589,28740,6293,15498,10708,30385,37937,42530,977,63341,9129,
43901,57438,8528,11000,564,64403,31983,21376,43109,34160,32002,43340,61805,
20999,48992,61275,30923,16711,39789,64317,20326,50474,26628,54781,57034,24342,
36666,3946,38133,64932,21612,35846,26539,52721,31808,17501,21280,58646,61721,
18841,16240,11041,40363,1649,25019,56604,10766,17771,32105,1207,37352,35281,
1457,19266,5058,42894,24470,33057,12291,6204,53786,56301,28733,57409,49552,
30584,6031,27074,26811,21571,12171,49523,35660,28749,4914,32081,28774,41725,
26179,904,48948,25258,38947,49562,39936,3587,45143,20634,64183,64675,42750,
16838,25897,20599,39489,61191,45632,42754,50214,59572,58339,42,57070,30597,
1925,22114,29437,21024,16656,53348,29950,64240,48182,6945,46127,42588,17740,
37801,10825,23172,44927,16323,54718,3524,3422,14200,30035,39748,42642,27072,
25976,37267,41251,60339,30560,25288,24949,54546,17377,854,56205,44771,7703,
62992,62325,58644,23396,41647,32110,41952,37482,42500,16086,44504,13565,64083,
64880,52600,17296,48931,34973,11737,17856,56464,41777,23048,46555,30818,50345,
38317,29026,6348,1655,40101,63792,39833,31654,12498,28792,4643,54274,26691,
63495,47453,3385,35604,28288,29667,33306,14188,17191,31711,1894,3496,26337,
29863,6353,25701,63522,64249,56353,61696,29390,17202,46888,2466,11412,27672,
18664,53279,48874,28348,63674,16713,21087,36625,12217,7932,29979,48386,20633,
38387,54424,4565,17132,40746,54873,46960,44418,3336,30900,9893,38763,40238,
15281,2081,40093,12656,37097,11110,53976,40455,27247,58551,20606,16811,15013,
2939,41563,26347,21994,9542,45071,63743,44549,42304,18119,24911,29630,34830,
31115,3033,58972,29306,33382,9812,28048,49275,50821,6556,63822,16949,49900,
3420,28679,47253,11638,18286,54249,62100,37244,33624,47051,12799,43835,24030,
52418,16083,10941,57860,23900,43344,56363,923,40449,11820,47967,41362,7398,
24548,53340,31472,60903,19803,27670,3089,38531,56835,55072,25786,19511,4362,
21349,9943,7595,54325,62411,63338,11126,15532,16242,58896,63986,63285,19051,
32230,12903,39189,48144,23519,19352,6579,38907,59837,959,29122,28965,29145,
33987,43308,45033,45440,11404,58269,39706,10188,17490,55828,64534,41962,19866,
36811,58038,32038,5164,55459,19509,8453,28633,11352,58041,52230,5835,49276,
54405,36903,11614,35529,62507,43858,20925,56677,13192,36125,28403,39885,23579,
34004,14262,16430,58139,52884,37654,57757,63164,28687,33687,28958,40984,34120,
50885,61666,49025,18267,10527,13962,32827,22177,49924,63925,34800,62859,28128,
6270,26740,51610,3321,13940,59591,9246,12542,45107,47480,37786,18039,35089,
23992,6798,7126,5416,63132,25235,60010,3412,64210,42655,27050,16390,30592,
27538,55422,62490,13272,30068,42911,2710,25771,25234,54408,20200,55559,43135,
50438,32816,4619,7369,55807,40144,62577,59001,64988,53846,28610,46009,26507,
9995,3733,52654,19683,19764,62691,25678,1845,35189,13639,28920,37169,44026,
2307,45539,42633,513,34182,29375,14826,12753,45258,10551,61837,14793,11978,
49963,15478,5390,12044,22920,24603,58963,30742,18897,61589,27821,2377,64954,
49538,45657,24956,48807,57494,29245,41331,32141,17514,27760,42625,36796,60646,
14561,50470,44189,57004,41303,57063,18050,51303,17085,15217,44546,56831,7432,
42151,53537,46197,22271,20435,7572,45187,47991,59269,15681,62851,27139,50986,
826,46706,44020,26623,51122,54481,62290,22159,61811,5977,4996,24724,46883,
27403,54859,64080,11304,55455,50106,9743,2420,47424,2847,6751,15593,7797,
13124,44831,19695,12571,7098,35267,63432,31194,8259,60896,10417,43220,28690,
8038,51364,13061,11192,64098,59777,13199,18968,55026,54106,25371,18277,30769,
24076,47318,56391,2830,54688,23525,49753,25506,47245,3323,9371,43525,20826,
10564,62741,44893,46526,57309,8303,23012,27739,18432,9461,5985,17001,2685,
14204,51997,44612,45869,22908,57062,33541,58083,32460,21885,14321,50797,21270,
30498,20267,7568,50027,48887,16981,45360,41509,39636,5381,52171,52512,14926,
4430,43144,23205,56272,26137,51532,58253,47485,48767,55482,14390,54162,2813,
11534,15206,56202,18348,36572,16457,6497,53301,58257,12161,30086,59363,27891,
13165,43173,33232,16288,53202,29545,12774,38523,60955,35059,32743,7938,14069,
63539,55142,14536,16260,41971,31358,31448,1971,45377,39542,59487,29651,14433,
18317,6712,10404,48810,33934,5121,24365,30641,22371,33032,35045,22762,41822,
23760,7803,15991,15314,48244,53141,23301,41988,7160,47862,7835,12544,32456,
43321,49068,2592,57661,16303,22333,10361,62840,58458,32497,3887,8925,57660,
4546,5458,51245,33512,13650,62300,10755,2643,12112,12117,26543,24868,4857,
17931,13326,15862,8740,62881,59675,5272,5784,20678,57528,62305,10452,56900,
17507,17180,41147,9999,4833,4965,40279,59634,16517,46829,30276,62291,38489,
50890,25046,57562,64558,1479,41614,3046,58185,16706,39688,1994,43244,52446,
50938,44521,11163,27688,21682,18837,43990,14488,9054,3735,22818,49785,39743,
42552,25295,55406,33288,47617,44917,19924,9776,4043,42146,12693,57239,21350,
13973,64166,51028,19604,55865,51551,14997,50747,53429,40561,24418,48035,38917,
24979,105,13699,15256,26671,55080,9921,52175,35447,54483,33442,53528,4719,
60171,52278,60918,10228,63965,50992,28802,35502,53387,12822,45677,499,50489,
22476,24465,63892,53614,47387,3003,2768,46062,60730,52885,56695,17608,54075,
24284,15222,40705,54641,29647,10218,21966,54281,8966,60808,25713,60263,26111,
12689,20229,21387,4949,56042,21107,47522,28097,5598,64069,22101,57912,63006,
53967,28318,47609,16753,26476,29154,24835,44281,10141,28072,51745,8935,28972,
41486,19412,42281,13902,44201,741,20354,25894,22366,44337,13597,22332,34424,
16578,37531,29280,53793,62785,39200,36822,49735,48742,61120,4912,18685,31989,
53636,44423,2029,49263,62704,4356,22765,33468,63976,5174,22730,9908,16897,
25583,24087,32030,27326,7514,26747,35178,51926,41605,58619,12466,23370,42595,
9754,34613,58148,38542,42930,20971,21772,41161,42137,41088,25017,26258,43703,
37405,47819,50099,41153,29327,56672,6943,36837,20945,32046,44898,56073,25797,
63481,22628,29909,17026,33740,28052,12365,64267,11427,18014,61484,61248,54884,
32677,56236,44212,51183,8027,31235,36371,4001,44106,48501,63436,9209,8535,
26920,38496,45546,7911,54642,28723,12707,43781,32774,58819,61540,46743,31575,
59231,57703,35464,2584,4309,15320,15566,17693,39100,35637,9363,37768,20150,
14236,14206,24328,9779,53970,7138,28847,47881,53491,9905,18501,3592,61657,
49531,11459,21244,61949,56848,11977,63075,47798,21779,64820,4512,31388,16005,
52634,22131,48550,62964,56974,31081,58011,10189,60575,22397,44947,38378,61859,
7068,36296,3322,9091,2140,41096,13543,63520,57774,22173,6520,38521,63663,8515,
35403,53932,25993,8051,28649,13152,45058,44485,58937,9229,24474,1276,34999,
45223,5515,50029,14051,9320,19761,48280,64283,55079,13510,31966,39638,7067,
27082,37234,7864,18800,64550,34665,34983,54022,53893,1082,26255,63938,25832,
28578,21891,40816,19264,54416,22407,59416,36935,18997,24925,24996,22965,4434,
49495,37398,460,57003,34399,19724,36255,11746,4601,9460,48221,61270,11863,
10928,54046,8756,52680,30874,44446,23069,51900,63290,20557,41042,28204,39674,
16412,37121,25219,57812,25305,64815,15334,41202,53365,40369,10084,29162,45218,
3610,7684,52179,39769,29347,13321,39853,48894,1468,60630,63407,47345,3492,
41993,13126,54289,2340,63003,52540,41803,23780,42193,3950,18618,55342,60651,
48200,54,23823,6018,23046,24450,54710,35317,64171,12554,37036,29850,47081,
7796,23953,59157,57058,59167,16031,5880,61289,8569,44754,2212,14037,15505,
59997,39238,42321,61371,56421,41287,29786,25998,23402,37306,17661,35548,11776,
61007,53338,18482,638,33599,57060,25466,24797,57845,36143,19057,33827,13180,
60383,54011,28905,43121,52222,34936,50927,47228,61896,33319,24330,5188,17829,
6625,5294,31373,10838,58594,61969,59573,62791,26119,5976,53398,20730,52764,
46514,63534,26805,44648,51783,34976,49293,18446,37747,4747,6717,45027,22932,
30063,54526,61321,13412,60996,3911,23479,41386,21723,28697,21842,28085,10819,
39388,11688,28534,38028,63397,55604,21996,19426,32633,33798,24438,4334,13989,
39391,31508,31406,11494,22989,37429,30763,7485,223,18823,4743,58915,38738,
2112,13814,14841,36305,55597,2892,45852,6087,63746,16333,39315,52402,54868,
26899,51964,9122,13891,29445,61458,40784,27610,9292,1703,27271,43152,6000,
3714,3184,14010,33017,53090,22378,19581,48622,33862,86,44691,4618,35533,28162,
29258,37408,31848,59780,9441,4021,15607,60753,39425,22112,26410,60513,27172,
52239,16374,7729,40612,28488,30165,36764,17999,1712,17375,48987,20325,28506,
38981,53347,22829,37054,52458,32581,30563,20203,30825,12313,14549,51981,45031,
32768,10200,44428,7582,57915,49436,29535,45841,64642,55399,36559,21575,35423,
23449,64916,34674,49997,23231,29269,41673,9964,49930,45682,5739,6523,40134,
13417,56058,12490,34113,50545,52177,38131,2731,33678,40601,27642,64688,60387,
30793,41859,21225,10583,13499,39568,18406,17106,1842,23166,40757,29505,27727,
5103,37106,15004,27600,38006,19715,17670,32431,320,20909,55629,37459,45265,
393,2850,18220,22460,23164,8301,55796,38982,723,23999,44191,42339,1608,22218,
3287,20867,20141,22880,35035,29987,30548,14442,49362,61009,18313,5118,39157,
34876,35616,57673,38865,19119,17345,34818,7636,5809,32595,53536,59529,54583,
40940,38978,58793,60775,32831,2640,40992,57713,17077,14072,29495,6315,44550,
26356,30724,12969,28777,10082,16417,8162,62628,14381,22671,30557,6209,42497,
31162,28244,29662,26683,16196,18799,54017,30440,37563,31805,47698,23115,24570,
42823,13153,52036,26250,41464,56496,23118,19088,2789,2023,49754,56907,4989,
49095,12724,29378,5351,24153,26158,6670,58987,39253,35402,33367,38301,24068,
48556,17675,31879,41848,40563,47315,4388,26737,54682,56842,29406,30522,63089,
51679,37215,62353,44876,2262,7504,5267,40247,16043,44031,18271,44096,29755,
56670,47076,63191,31611,51648,64669,59781,31317,49491,48368,20819,34541,1304,
8576,54941,11323,1946,59871,44248,6468,7553,47621,16352,46067,33046,4031,
19713,22779,8388,15932,12482,37711,18303,23303,30363,15663,64544,16725,38021,
63018,33870,46397,37111,46760,24322,56491,54734,24952,3226,38284,7743,42743,
8218,49667,22672,47554,4707,2061,23796,15287,37946,7118,4611,47917,39182,
20529,32537,46499,6233,36377,16554,21901,58603,46424,45426,25475,61183,43455,
54154,54263,47886,15113,25780,51776,64437,56742,60691,27777,4758,3264,33836,
50584,8110,37592,17803,704,2548,13876,35494,10239,45647,6789,57255,72,33859,
16102,58756,8260,30300,45828,46366,55176,15821,55013,40433,8499,40676,53558,
35845,42669,59670,24890,1000,47901,2848,49823,25018,17013,11367,46715,18787,
17816,29711,25990,25109,49431,18862,54143,33821,17898,3721,54659,35799,49992,
17172,63954,35408,22401,61766,12894,30516,60270,12920,49527,8417,7503,17887,
28058,11246,408,871,47514,54586,47930,33504,62036,19228,4732,47790,52454,
19313,47740,9937,27980,21726,63440,53148,17969,33161,15885,25386,21948,61885,
55351,22577,29827,60647,4344,28631,30096,23689,14991,52463,39093,60985,6902,
33600,10499,21668,12611,16946,16347,57161,11001,22964,39471,20710,13168,28010,
28453,18475,46244,11311,17508,11951,28718,45340,16820,9934,58126,28897,27523,
23300,28598,4465,13359,23617,11598,56039,42704,19544,35404,24875,48079,41793,
6547,784,26963,63607,39015,13583,10943,8812,57468,64793,30832,35704,16687,
31390,1036,33124,35967,23047,46518,32252,16825,54648,16106,61953,29130,43024,
25773,15529,201,42245,53661,16383,16140,55613,59255,17126,55001,5198,38999,
31695,16530,43732,34659,41372,44570,5647,61308,60273,57221,43813,19252,30249,
49169,6,18095,4299,46580,34539,48126,34354,20385,37071,38042,40092,28640,
30817,10770,58857,55388,40278,53581,24728,44624,60231,50983,40602,45829,31807,
50857,28019,55763,47874,27099,13645,35918,23964,15446,12358,11438,3612,61882,
5335,20234,4902,33939,26110,58176,38705,23650,43558,25556,33178,11392,63730,
4834,2558,560,43983,6635,38661,8059,6910,64381,3299,11480,54918,18607,21657,
7223,3168,52352,54183,27963,12940,8077,54322,42807,13194,4926,48753,53243,
47266,54323,34624,23059,37103,22815,64342,2979,8126,7266,35576,32932,41048,
14686,43036,61817,22143,16380,15982,41726,42672,33427,6840,18694,30932,16741,
21976,11935,41095,29815,26642,22080,48184,42194,34214,23943,57140,42702,60641,
30773,27436,27601,25712,61774,11700,12173,1260,43251,9462,13659,27161,10530,
990,40891,52434,24697,31613,40798,31192,56047,59052,1048,64713,3971,50803,
31437,4422,40810,8257,23562,57770,2846,17663,1755,17358,4114,15340,45261,
22170,62021,13762,18209,738,27342,18314,30225,25662,3439,22982,27752,22350,
13792,61781,902,53288,26173,11990,47183,42516,45063,2864,30917,8782,52793,
56518,12885,34526,31638,16294,26728,43616,263,40773,9186,32763,687,33106,
37425,28747,12351,47,36091,20616,24999,21236,32001,46055,60921,2191,30313,
57518,25284,8225,19344,17942,16720,37939,25765,40823,46733,58459,48090,37455,
59102,950,45153,35432,23151,23677,20758,22022,20247,44199,27294,14678,39546,
9661,53213,53880,17882,9136,25329,48960,30164,46193,10523,25730,31316,41741,
34724,59271,12560,20932,15011,20261,51568,31792,21243,57129,28292,53260,17787,
29374,30430,14327,11086,13490,64969,27668,44453,28041,2551,62911,28101,38820,
1920,32351,11729,15421,59751,2197,48399,8847,49333,21160,38339,4224,51395,
19551,59823,13877,34917,462,7536,62186,51932,10187,64220,49153,49651,30654,
20789,7922,11630,40673,62839,20576,39144,12436,13514,23591,62586,55235,59212,
10453,7241,35154,22623,19472,33170,18316,50290,11,19872,23251,7372,12084,
35177,27930,64904,23096,20719,37834,37357,41396,51700,50362,42866,40272,39219,
37600,53289,5441,21721,40865,9852,27624,33886,55846,47689,51319,54906,23342,
29900,4307,45359,24753,34045,40930,60002,26383,42062,7585,39966,61869,26293,
38894,31773,43722,45310,39687,335,6516,48254,16013,5144,49085,35643,3611,
52358,43067,17627,29286,57637,52843,15493,2528,18871,9190,36144,25909,32655,
11626,55155,26120,15745,43391,44272,21643,21648,4457,30804,42350,30547,15379,
57765,48684,60483,379,58918,44355,38563,52691,6393,6922,64602,42288,17948,
44117,20641,33770,5302,64316,6674,14669,40578,38966,56,6611,17978,17381,30485,
14449,5446,2748,27379,20123,32330,7651,61986,56305,3994,50466,9660,15612,
42904,11007,53545,51647,33940,10843,63935,21348,55039,40285,36890,63173,726,
48694,41891,51962,61342,23791,48112,12644,21517,32564,28787,19157,4612,54982,
5906,24029,28122,63501,13879,58924,18057,18963,46783,48382,4528,57567,58706,
49133,750,11071,53252,24815,29185,64747,55663,17756,52071,3851,30755,15309,
48338,50585,36595,52104,7895,57305,5111,20542,29161,1063,17238,57376,20544,
21286,37554,27609,13334,21577,7222,6247,33209,51466,31607,52693,29231,31956,
50145,44887,60704,44075,13291,54645,56804,54084,9566,60477,43817,40219,26856,
64561,27782,41074,545,9185,14143,22980,33816,47895,11882,17784,54240,52653,
30766,1271,40588,34215,25738,18676,61054,20063,43828,54834,38041,37204,34843,
5886,15969,8629,60680,9493,720,42840,3812,30524,23860,24287,35242,7348,47114,
33717,61839,54506,24205,20538,3576,17788,38805,48566,48829,42326,53414,44526,
53450,765,44056,16250,33302,6940,4446,24318,42320,2914,22515,51365,13772,
61202,383,601,63056,40290,36526,5128,37587,32896,44092,23729,24736,17738,
57461,5384,31896,483,16911,37643,40296,29687,5506,50717,48721,38313,57753,
33958,450,14258,64997,2975,5295,22578,58029,20873,12645,52085,55501,53913,
8034,61563,27467,26861,8404,52893,15613,15801,61720,43367,15851,17208,33502,
64262,44170,5708,4632,273,39380,58617,18109,26327,35781,4851,26430,40536,
46250,18125,12377,14217,49916,8988,25468,54440,61230,34517,18487,41632,25070,
15748,24625,30,8501,44265,55175,32914,36339,61909,47390,50824,62969,39565,
34129,10789,61702,49981,11929,33787,36179,64067,57109,34643,24134,65,43584,
59153,14982,20988,9678,44068,50861,28091,8857,13025,29048,56203,51072,10476,
57415,42235,53091,20851,30606,7253,62239,2258,15213,27990,54693,15348,42291,
20022,46189,56129,49536,49965,60958,43816,8523,64084,32242,15570,7972,37547,
50891,2602,30581,32879,20187,42355,3685,49984,395,48305,63723,33295,4915,
17564,21887,20460,23778,50227,49144,50138,47293,503,57790,33395,54560,6998,
64070,31542,10264,14196,43712,5539,21451,29834,9856,57040,35427,64129,43646,
9801,49345,24897,7951,31105,52868,5341,14078,44647,45450,9744,6796,33323,
44807,52507,53385,25880,58627,19118,22405,27080,14479,41397,50917,14302,51445,
45397,58344,30008,11532,25001,61300,24972,11860,57008,56821,47908,35871,40800,
22817,57897,55016,59342,61124,7203,60693,37291,62063,27679,49541,50769,29486,
2615,55606,2021,63459,25381,34407,32214,63651,42164,22461,2565,5523,24904,
20547,52382,38899,12773,38864,43374,45723,32835,33044,21378,9675,42688,4569,
22123,336,10637,48320,42209,52541,42496,21922,33250,15227,52386,933,10727,
46515,52681,16174,44661,42736,45511,59588,7633,20843,30472,8287,17275,11610,
19797,23553,13888,51817,21443,8524,39919,35088,11122,2579,9216,34448,25604,
53876,25036,9926,42230,56312,6380,62599,55937,1230,43082,14657,11371,40468,
23840,9300,10268,15062,46285,25275,21717,42402,58231,48997,61436,29080,13895,
23226,1964,8098,7858,60737,9413,7955,8876,23457,31948,20642,19402,6577,42461,
5857,6279,52950,27180,101,52647,55989,21094,24836,13636,41019,45858,34218,
39924,53884,3933,11664,48238,987,24382,59478,49594,21079,4633,1869,30855,
26716,27411,7450,35442,2232,56264,31735,17494,58054,34608,7022,33528,23573,
2854,5575,9474,29386,1780,15367,29631,31257,41041,41176,47648,43331,53149,
53831,11869,8073,60874,59354,36160,3482,23590,48283,47885,40675,39110,51228,
19577,27064,54267,25580,47008,3189,16643,30483,11275,57638,44439,39463,7923,
30287,59889,59211,2811,37,34426,62823,8658,19984,55791,22328,27518,3658,64354,
1683,6331,11266,33913,28736,16414,39844,57394,52404,14102,37073,60969,42173,
28379,27393,14613,59516,28657,25446,16101,44313,51576,28959,27374,58421,52949,
63577,49710,18738,24933,38874,14587,58711,32432,18599,23961,35458,44732,14949,
40143,40654,21851,20430,35025,1612,13935,27917,28818,53774,7431,62906,43275,
41659,14656,49928,61514,7827,54256,24790,24399,40597,23177,3917,18575,27603,
64958,30076,6951,45278,35552,57408,19095,23031,44664,6563,37403,61128,653,
11088,22981,35019,4497,41617,3167,29997,12580,63994,41732,28269,3627,2027,
54003,27365,59514,8375,42400,14720,34858,31938,30315,41547,11471,31588,7869,
59329,49816,19123,59007,27801,17069,5522,54672,29750,50868,29299,7654,58493,
18762,10749,44760,54910,49993,5594,25111,2898,28238,51954,29543,25538,16542,
57754,25838,15002,25089,33774,55095,12310,30264,2815,58007,23511,5583,41818,
35672,14190,47221,47842,29239,61129,18818,62479,11651,38937,32593,45103,53341,
26305,24878,16445,16342,25232,39930,2734,60082,327,2691,15582,14517,54870,
17326,22902,34849,42856,2666,26980,38259,46565,15692,26788,24597,36591,26854,
18589,359,9177,36382,45064,43415,62919,542,33417,31374,63937,12551,56012,
28743,10270,37148,7512,46380,62419,60289,43805,15063,58383,5224,59066,35499,
6739,62223,3837,4884,18345,17699,4181,27927,49164,64692,46159,7791,38848,
56766,35359,36621,36826,56788,28786,21077,61053,11101,41863,33148,44693,34475,
11789,29138,41919,51050,37421,21964,63294,55893,7901,63779,32758,31662,51687,
32075,8190,7865,36984,55147,31493,34666,24190,5753,15197,37503,29201,2312,
24164,20725,13290,30645,44858,19185,36322,34309,42239,59703,33174,17730,15331,
17793,41934,54176,56281,53237,50563,23703,51392,60882,62422,61249,22724,53988,
37449,45777,14784,38587,64568,64572,47703,9163,51054,18749,1621,43282,61879,
12216,54082,19154,22127,4896,17736,42295,10128,46608,52435,18456,2541,4872,
63399,40335,11527,18770,52254,1159,48749,27189,37517,58865,18745,39435,62860,
49234,25966,56655,45147,33823,62288,45530,12939,54058,45160,29701,42206,22866,
2594,2944,30965,24358,35511,35348,38063,23785,61453,974,55506,46413,32561,
37811,54164,2955,16484,39249,39416,49721,55566,44478,20101,47392,49929,48019,
63257,24436,42179,18947,37936,64721,54303,17249,15190,36895,55816,24850,39614,
61115,32962,4849,5679,57440,28708,58187,13446,54866,38214,37152,45538,58739,
61077,33702,56044,55250,11461,47271,15839,36599,33261,36938,50054,13184,35180,
59964,41143,27401,56611,31148,10081,56268,23623,48471,1475,8200,26085,23409,
59534,1720,47220,7597,25245,16634,59475,16493,5799,59154,28080,26687,29523,
57748,12974,1238,45856,42535,25186,9245,3997,17333,10309,44466,13839,17891,
13093,39,8813,64740,5896,33978,13634,15249,28093,40857,5735,60983,13074,25875,
19953,50306,51192,55120,56915,3475,54335,58900,13355,9131,27627,52973,58331,
1295,34530,15082,18582,28809,10183,26594,37668,26981,23587,9440,54352,61118,
20574,45971,36038,30243,28423,33204,29429,37616,26650,38323,42134,15738,29721,
16219,6901,56761,42646,34699,10718,54729,42538,37364,31676,58598,13004,51542,
23307,37359,30036,17658,39419,42152,51026,54551,23064,35144,465,8929,33953,
42135,27847,37423,6843,38326,44768,27596,55478,60200,37016,60111,7063,62887,
54528,48203,24194,32085,41927,58568,37999,41433,34201,49327,35299,1661,49433,
11735,28424,57148,19112,30021,42777,37765,44629,35820,42898,35428,18415,29424,
13223,56230,9740,35389,23180,1623,34668,6359,10771,22295,63921,50933,3601,
8447,31306,38282,58120,45876,43760,25632,11847,61137,10822,22344,25482,13224,
52350,4768,40314,36107,47355,36541,51791,11895,39494,26183,55907,3442,3498,
55824,51031,55784,11617,56869,4035,15444,58169,60425,32009,33338,5707,13896,
4015,52003,3832,16222,51722,35642,44810,51526,28817,32097,32275,37776,51603,
44459,55067,55049,303,16089,10313,55853,37758,1750,28184,7229,1779,44508,
37120,63135,61210,57036,29412,45588,52470,14125,15114,9960,27159,36159,46971,
10242,3908,31826,44805,52911,50401,14294,34,41006,64186,8769,61634,45679,1366,
44680,18521,11413,3440,24671,19948,60732,240,27304,8122,14683,35593,18416,
63761,27144,1617,23632,43382,31967,48031,53566,4797,5200,17262,24512,37168,
35822,12221,44743,31455,51391,58804,33879,16415,53655,6399,44864,45615,49182,
24391,952,17830,59370,64791,38960,19527,14245,48842,30486,43635,27001,43710,
15448,51381,31062,26278,25783,28343,62677,24242,46391,62809,61773,44772,5039,
51255,27798,58481,18315,233,11586,48910,5783,38875,16142,52039,17164,41488,
14212,28857,27789,20546,55821,26243,30709,64836,51298,30170,13866,60027,36512,
7544,3651,8968,46265,29391,36274,63464,11649,63029,47157,51805,39013,31769,
46662,2999,31295,37376,7040,25081,15793,32202,1888,20906,48178,64626,12305,
35896,43362,36018,50454,54587,50738,41695,64722,35135,53838,59893,49159,43572,
29684,15806,13786,24245,24321,62842,24563,6421,56418,28510,3022,19186,61199,
29649,53380,57617,4100,19181,42933,47553,61856,63429,25932,4957,43755,28605,
35493,64115,45894,16819,38731,17957,56093,28762,16560,42638,29392,43021,26704,
14357,21752,27695,58654,64394,27322,45506,44122,9604,3940,21535,38380,22754,
51380,52649,54441,24117,14813,17620,22287,9568,27100,61205,27706,64358,37893,
1832,3552,13265,40340,37457,51758,52031,49004,36866,40385,64195,56693,14838,
52499,52920,49093,55782,6037,4597,27788,30391,45469,30131,14810,45186,27623,
55276,42594,19068,55047,28919,56149,59925,5659,35269,20038,56836,20439,50757,
43787,30199,47910,16318,30587,18513,26099,27640,47496,8543,42726,12383,519,
58839,37570,17233,24366,39125,57491,36282,42534,51496,45606,45820,58663,6238,
39671,37361,32312,60722,42229,23060,25095,8994,46302,59793,21923,29349,6939,
26132,43531,5426,38508,63606,42875,37031,9526,29759,42647,6770,10884,33165,
52959,29481,24139,51753,49340,15101,23484,56668,13774,23074,29335,27190,2271,
15467,59248,64799,57964,60873,15649,57837,6159,59930,48913,16476,40695,24270,
20174,37350,11008,16507,34844,3214,31651,34864,61726,14746,53029,48444,62097,
40766,20213,58759,53857,23599,14858,16763,44627,44930,38920,56740,55366,48614,
63080,13679,29310,11157,55106,45035,50730,16919,29087,58956,5430,51407,60592,
21582,51757,21524,35086,28918,14760,53206,7888,35850,59890,60826,18918,46583,
39149,18705,31905,2580,42112,14904,33707,62395,2432,14332,3016,36152,25132,
46547,35505,38671,29035,13854,23600,24874,56729,54735,53399,56895,44781,23542,
15639,47927,36062,27378,45346,24629,22739,60603,16110,64285,18817,28481,31146,
32301,37841,11283,622,14271,14928,24530,30981,62110,41683,8566,13113,13536,
36086,30629,59702,52401,61411,10122,27794,43241,39556,17483,6654,63140,37709,
42399,53664,13701,48900,41911,41498,39890,47429,2688,4538,19314,310,3456,
10610,53064,10258,40332,19099,10070,61588,6302,22918,42332,43085,46753,15453,
46191,11806,16148,23282,18437,20373,22396,26715,64215,29069,7309,26644,48187,
15501,34856,31959,21857,49395,2505,343,24095,16,38321,5967,18131,22799,25898,
41445,26746,56790,3045,45684,15540,40446,18387,58926,21246,31232,26541,61800,
27883,54653,44891,17244,1399,22171,42555,29948,46287,34093,39346,918,56901,
49589,32452,35828,21321,43618,34360,621,32387,54805,57908,59679,17259,42088,
25024,28346,21546,24511,61627,24424,45604,41350,59789,16206,48768,31323,47755,
31818,30078,15911,24533,14148,9362,51343,54511,14425,5931,30330,10844,61968,
23000,42950,22910,4269,27273,9828,36236,58779,38381,13159,6452,50048,31072,
28259,57974,2915,64876,62425,11686,33860,61198,10807,10616,58600,49344,26145,
59767,58863,9064,36397,6289,7174,59284,22985,51304,39327,54564,53953,44082,
43066,20332,46871,38304,52133,49783,57254,32430,46270,58998,16116,16840,30911,
62439,26295,36907,40145,29855,22596,61688,44940,24178,43221,32683,31154,39409,
1957,6211,44689,63182,54061,41408,64684,19891,6631,56746,50980,29837,8173,
47702,41159,48516,23589,37807,10457,2142,1568,39967,58755,41630,19796,63053,
3695,9368,11652,47302,12423,24825,27444,7344,9154,11889,59538,34346,38970,
45456,57347,18514,47046,39036,35503,12457,42881,51574,17240,52481,33644,10737,
25301,24269,53892,27701,3064,18624,16951,16442,27958,9616,38690,55837,27939,
14259,37911,7039,12679,43919,47728,30537,29853,34616,25741,54510,12328,64122,
50687,21129,2017,38329,45327,41162,27312,10315,38934,6656,64592,57721,61795,
44502,22693,41083,62699,55499,14161,34248,21940,4220,10854,55958,1857,54414,
6498,43101,30340,16254,16297,24192,42263,32205,39460,24544,18436,8737,34874,
2535,24504,11254,58736,42610,1250,734,43643,30551,20075,18461,18543,14145,
29570,30347,19240,59289,17198,31872,9103,51770,57256,6886,31907,20520,15310,
33378,18697,11984,5704,30627,9770,21083,41855,2368,3241,3143,22617,9910,40688,
48034,59891,7055,47055,13802,50363,26355,51874,56074,36964,46198,57233,1526,
34504,45801,34502,32722,7208,46678,42761,49103,16049,15611,32988,32566,47539,
16596,27718,57418,49689,49743)( [...] )
gap> f*p;
<partial perm on 6328 pts>
gap> p*f;  
<partial perm on 6328 pts>
gap> f*p*p^-1=f;
true
gap> p^2*p^-2*f*p*p^-1*f=f^2;
true
gap> f<f;
false
gap> f/p;
<partial perm on 6328 pts>
gap> f/p*p=f;
true
gap> f:=RandomPartialPerm(10);   
[ 1, 2, 3, 5, 6, 7, 8, 10 ] -> [ 6, 2, 5, 4, 7, 8, 9, 10 ]
gap> g:=RandomPartialPerm(10);                        
[ 1, 2, 3, 5, 7, 8 ] -> [ 8, 10, 9, 1, 5, 6 ]
gap> f<g;
true
gap> g<f;
false
gap> f=g;
false
gap> f/g;
[ 1, 3, 7, 8, 10 ] -> [ 8, 7, 1, 3, 2 ]
gap> f/g=f*g^-1;
true
gap> f/g^-1=f*g;
true
gap> AsPermutation(f);
fail
gap> AsTransformation(f);
Error, no method found! For debugging hints type ?Recovery from NoMethodFound
Error, no 1st choice method found for `AsTransformation' on 1 arguments called from
<function "HANDLE_METHOD_NOT_FOUND">( <arguments> )
 called from read-eval loop at line 43 of *stdin*
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit;
gap> AsTransformation(f, 10); 
Error, 2nd argument should be larger than the largest point moved called from
<function "unknown">( <arguments> )
 called from read-eval loop at line 43 of *stdin*
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit;
gap> f;   
[ 1, 2, 3, 5, 6, 7, 8, 10 ] -> [ 6, 2, 5, 4, 7, 8, 9, 10 ]
gap> AsTransformation(f, 11);
Transformation( [ 6, 2, 5, 11, 4, 7, 8, 9, 11, 10, 11 ] )
gap> AsPartialPerm(last);
Error, Variable: 'AsPartialPerm' must have a value
not in any function at line 45 of *stdin*
gap> $tionRep]);                                                             
gap> # new for 0.7! - AsPartialPermNC - "for a transformation"
gap> $#######                                                                
gap> 
gap> InstallMethod(AsPartialPermNC, "for a partial perm", 
Error, Variable: 'AsPartialPermNC' must have a value
not in any function at line 50 of *stdin*
> [IsTransformation and IsTransformationRep],
> function(f)
>   img:=f![1];
Syntax error: warning: unbound global variable
  img:=f![1];
      ^
>   n:=Length(f![1]);
Syntax error: warning: unbound global variable
  n:=Length(f![1]);
    ^
> $x; fi;      end));                                                        
Syntax error: warning: unbound global variable
  return PartialPermNC(List(img, x-> if x=n then return 0; else return x; fi; \
     end));
                               ^
Syntax error: expression expected
  return PartialPermNC(List(img, x-> if x=n then return 0; else return x; fi; \
     end));
                                      ^
gap> end);
Syntax error: expression expected
end);
  ^
gap> InstallMethod(AsPartialPermNC, "for a partial perm", 
Error, Variable: 'AsPartialPermNC' must have a value
not in any function at line 57 of *stdin*
> [IsTransformation and IsTransformationRep],
> function(f)
>   local img, n;
>   img:=f![1];
>   n:=Length(f![1]);
> $x; fi;   end));                                                           
Syntax error: expression expected
  return PartialPermNC(List(img, x-> if x=n then return 0; else return x; fi; \
  end));
                                      ^
gap> end);InstallMethod(AsPartialPermNC, "for a partial perm", 
Syntax error: expression expected
end);InstallMethod(AsPartialPermNC, "for a partial perm", 
  ^
Error, Variable: 'AsPartialPermNC' must have a value
not in any function at line 64 of *stdin*
> [IsTransformation and IsTransformationRep],
> function(f)
>   local img, n;
>   img:=f![1];
>   n:=Length(f![1]);
> $rn 0;                                                                     
>     else 
>       return x; 
>     fi;
>   end));
> end);
gap> 
gap> InstallMethod(AsPartialPermNC, "for a partial perm", 
Error, Variable: 'AsPartialPermNC' must have a value
not in any function at line 77 of *stdin*
> [IsTransformation and IsTransformationRep],
> function(f)
>   local img, n;
>   img:=f![1];
>   n:=Length(f![1]);
> $rn 0;                                                                     
>     else 
>       return x; 
>     fi;
>   end));
> end);
gap> 
gap> $mationRep]);                                                           
gap> InstallMethod(AsPartialPermNC, "for a partial perm", 
> [IsTransformation and IsTransformationRep],
> function(f)
>   local img, n;
>   img:=f![1];
>   n:=Length(f![1]);
> $rn 0;                                                                     
>     else 
>       return x; 
>     fi;
>   end));
> end);
gap> AsPartialPermNC(last);
[ 1, 2, 3, 5, 6, 7, 8, 10 ] -> [ 6, 2, 5, 4, 7, 8, 9, 10 ]
gap> f;
[ 1, 2, 3, 5, 6, 7, 8, 10 ] -> [ 6, 2, 5, 4, 7, 8, 9, 10 ]
gap> f:=RandomPartialPerm(10);
[ 1, 3, 4, 5, 6, 9 ] -> [ 9, 10, 5, 7, 2, 8 ]
gap> AsTransformation(f);
Error, no method found! For debugging hints type ?Recovery from NoMethodFound
Error, no 1st choice method found for `AsTransformation' on 1 arguments called from
<function "HANDLE_METHOD_NOT_FOUND">( <arguments> )
 called from read-eval loop at line 106 of *stdin*
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit;
gap> AsTransformationNC(f);
Transformation( [ 9, 11, 10, 5, 7, 2, 11, 11, 8, 11, 11 ] )
gap> AsPartialPermNC(last)=f;
true
gap> DenseRangeList(f);
[ 9, 0, 10, 5, 7, 2, 0, 0, 8 ]
gap> g:=RandomPartialPerm(20);
[ 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19 ] -> 
[ 3, 17, 12, 13, 6, 1, 2, 20, 9, 16, 4, 15, 8 ]
gap> DenseRangeList(f);
[ 9, 0, 10, 5, 7, 2, 0, 0, 8 ]
gap> DenseRangeList(g);
[ 3, 17, 12, 13, 6, 1, 2, 20, 0, 9, 16, 4, 15, 0, 0, 0, 0, 0, 8 ]
gap> DomPP(f)=RanSetPP(f^-1);
true
gap> RanSetPP(f)=DomPP(f^-1);   
true
gap> FixedPointsPP(f);
[  ]
gap> FixedPointsPP(f^-1);
[  ]
gap> FixedPointsPP(g);   
[  ]
gap> f:=RandomPartialPerm(100000);
Error, usage: can only create partial perms on at most 65535 pts, in
  return DensePartialPermNC( out ); called from 
<function "RandomPartialPerm">( <arguments> )
 called from read-eval loop at line 117 of *stdin*
gap> RereadPackage("citrus/gap/pperm.gi");     
true
gap> f:=RandomPartialPerm(100000);
Error, usage: can only create partial perms on at most 65535 pts, called from
<function "RandomPartialPerm">( <arguments> )
 called from read-eval loop at line 119 of *stdin*
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk> quit;
gap> ?Error
Help: several entries match this topic - type ?2 to get match [2]

[1] Reference: Error
[2] Reference: Error and ErrorCount
[3] Reference: errors syntax
[4] Reference: ErrorNoTraceBack
[5] Reference: ErrorCount
[6] singular (not loaded): Errors on the Singular side
gap> ?1
  7.6-1 Error
  
  ‣ Error( messages, ... ) ────────────────────────────────────────── function
  
  Error  signals  an error from within a function. First the messages messages
  are  printed, this is done exactly as if Print (7.3-4) (see 7.3) were called
  with  these  arguments.  Then  a break loop (see 7.4) is entered, unless the
  standard  error  output  is  not connected to a terminal. You can leave this
  break  loop  with return; to continue execution with the statement following
  the call to Error.
  
  7.6-2 ErrorCount
  
  ‣ ErrorCount(  ) ────────────────────────────────────────────────── function
  
  ErrorCount  returns  a  count  of  the  number  of  errors  (including  user
  interruptions)  which have occurred in the GAP session so far. This count is
  reduced  modulo 2^28 on 32 bit systems, 2^60 on 64 bit systems. The count is
  incremented  by  each  error,  even if GAP was started with the -T option to
  disable the break loop.
  
  
  7.7 Leaving GAP
  
  The normal way to terminate a GAP session is to enter either quit; (note the
  semicolon)  or  an  end-of-file  character  (usually  <Ctrl-D>) at the gap> 
  prompt in the main read eval print loop.
  
  7.7-1 QUIT
  
  ‣ QUIT────────────────────────────────────────────────────── global variable
  
  An  emergency  way  to  leave  GAP  is  to enter QUIT at any gap> or brk> or
  brk_nn> prompt.
  
  7.7-2 InstallAtExit
  
  ‣ InstallAtExit( func ) ─────────────────────────────────────────── function
  ‣ QUITTING────────────────────────────────────────────────── global variable
  
  Before  actually  terminating,  GAP will call (with no arguments) all of the
  functions  that  have  been  installed  using InstallAtExit. These typically
  perform  tasks  such  as  cleaning  up  temporary  files  created during the
  session,  and closing open files. If an error occurs during the execution of
  one  of these functions, that function is simply abandoned, no break loop is
  entered.
  
  ────────────────────────────────  Example  ─────────────────────────────────
    gap> InstallAtExit(function() Print("bye\n"); end);
    gap> quit;
    bye
  ────────────────────────────────────────────────────────────────────────────
  
  During  execution  of  these functions, the global variable QUITTING will be
  set  to  true  if  GAP  is  exiting  because  the  user typed QUIT and false
  otherwise.  Since  QUIT  is  considered  as  an emergency measure, different
  action may be appropriate.
  
  7.7-3 SaveOnExitFile
  
  ‣ SaveOnExitFile──────────────────────────────────────────── global variable
  
  If,  when  GAP  is  exiting  due to a quit or end-of-file (i.e. not due to a
  QUIT)  the  variable  SaveOnExitFile  is  bound  to a string value, then the
  system will try to save the workspace to that file.
  
  
  7.8 Line Editing
  
  In  most  installations GAP will be compiled to use the Gnu readline library
gap> f;                                                               
[ 1, 3, 4, 5, 6, 9 ] -> [ 9, 10, 5, 7, 2, 8 ]
gap> InternalRepOfPartialPerm(f);
[ 9, 6, 2, 10, 1, 10, 9, 0, 10, 5, 7, 2, 0, 0, 8, 1, 3, 4, 5, 6, 9, 9, 10, 5, 
  7, 2, 8, 2, 5, 7, 8, 9, 10 ]
gap> InternalRepOfPartialPerm(g);
[ 19, 13, 1, 20, 1, 20, 3, 17, 12, 13, 6, 1, 2, 20, 0, 9, 16, 4, 15, 0, 0, 0, 
  0, 0, 8, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 3, 17, 12, 13, 6, 1, 
  2, 20, 9, 16, 4, 15, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
gap> RanSetPP(g);
[ 1, 2, 3, 4, 6, 8, 9, 12, 13, 15, 16, 17, 20 ]
gap> InternalRepOfPartialPerm(g);
[ 19, 13, 1, 20, 1, 20, 3, 17, 12, 13, 6, 1, 2, 20, 0, 9, 16, 4, 15, 0, 0, 0, 
  0, 0, 8, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 3, 17, 12, 13, 6, 1, 
  2, 20, 9, 16, 4, 15, 8, 1, 2, 3, 4, 6, 8, 9, 12, 13, 15, 16, 17, 20 ]
gap> OnSets(DomPP(f), f)=RanPP(f);
false
gap> OnSets(DomPP(f), f)=RanSetPP(f);
true
gap> OnTuples(DomPP(f), f)=RanSetPP(f);
false
gap> OnTuples(DomPP(f), f)=RanPP(f);   
true
gap> OnTuples(RanPP(f), f^-1)=DomPP(f);
true
gap> OnSets(RanSetPP(f), f^-1)=DomPP(f);
true
gap> OnSets(RanSetPP(g), g^-1)=DomPP(g);
true
gap> OnTuples(RanPP(g), g^-1)=DomPP(f);
false
gap> OnTuples(RanPP(g), g^-1)=DomPP(g);
true
gap> f:=RandomPartialPerm(1000);
<partial perm on 647 pts>
gap> MaxDomPP(f);
1000
gap> MaxDomRanPP(f);
1000
gap> MaxRanPP(f);
999
gap> MinRanPP(f);
2
gap> MinDomRanPP(f);
1
gap> MinRanPP(f);
2
gap> MinDomPP(f);
1
gap> f:=RandomPartialPerm(50000);
<partial perm on 31567 pts>
gap> MaxDomRanPP(f);
50000
gap> MaxRanPP(f);   
50000
gap> MinDomPP(f); #something wrong here!
fail
gap> f[1];
50000
gap> MinDomRanPP(f);
1
gap> MinRanPP(f);
1
gap> f[50007];
fail


gap> SetInfoLevel(InfoWarning, InfoLevelInfoWarning);;
gap> SetInfoLevel(InfoCitrus, InfoLevelInfoCitrus);;
gap> Unbind(InfoLevelInfoCitrus);; Unbind(InfoLevelInfoWarning);;

gap> STOP_TEST("Citrus package: pperm.tst", 10000);
