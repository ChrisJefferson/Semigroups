#############################################################################
##
#W  bipartition.xml
#Y  Copyright (C) 2011-13                                James D. Mitchell
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="BipartitionFamily">
  <ManSection>
    <Fam Name="BipartitionFamily"/>
    <Description>
      The family of all bipartitions is <C>BipartitionFamily</C>.
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="IsBipartition">
  <ManSection>
    <Filt Name="IsBipartition" Arg='obj' Type='Category'/>
    <Description>
   Every bipartition in &GAP; belongs to the category
    <C>IsBipartition</C>. Basic operations for bipartitions are
    <Ref Attr="RightBlocks"/>,
    <Ref Attr="LeftBlocks"/>,
    <Ref Attr="ExtRepOfBipartition"/>,
    <Ref Attr="LeftProjection"/>,
    <Ref Attr="RightProjection"/>,
    <Ref Attr="Inverse"/>, 
    <Ref Attr="DegreeOfBipartition"/>,
    <Ref Attr="RankOfBipartition"/>,
    multiplication of two bipartitions of equal degree is 
    via <K>*</K>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="IsBipartitionCollection">
  <ManSection>
    <Filt Name="IsBipartitionCollection" Arg='obj' Type='Category'/>
    <Description>
       Every collection of bipartitions belongs to the category
     <C>IsBipartitionCollection</C>. For example, bipartition semigroups
     belong to <C>IsBipartitionCollection</C>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="AsTransformation">
  <ManSection>
    <Oper Name="AsTransformation" Arg="f"/>
    <Oper Name="AsTransformationNC" Arg="f"/>
    <Returns>A transformation or <K>fail</K>.</Returns>
    <Description>
      When the argument <A>f</A> is a bipartition, that mathematically defines
      a transformation, this function returns that transformation. A
      bipartition <A>f</A> defines a transformation if and only if its right
      blocks are the image list of a permutation of <C>[1..n]</C> where
      <C>n</C> is the degere of <A>f</A>. <P/>
      
      <C>AsTransformation</C> verifies that its argument defines a
      transformation and <C>AsTransformationNC</C> does not. See 
      <Ref Oper="IsTransBipartition"/>. 
      <Example>
gap> f:=Bipartition([ 1, -3 ], [ 2, -2 ], [ 3, 5, 10, -7 ], [ 4, -12 ], 
> [ 6, 7, -6 ], [ 8, -5 ], [ 9, -11 ], [ 11, 12, -10 ], [ -1 ], [ -4 ], 
> [ -8 ], [ -9 ]);;
gap> AsTransformation(f);
Transformation( [ 3, 2, 7, 12, 7, 6, 6, 5, 11, 7, 10, 10 ] )
gap> IsTransBipartition(f);
true
gap> f:=Bipartition([ 1, 5 ], [ 2, 4, 8, 10 ], [ 3, 6, 7, -1, -2 ], 
> [ 9, -4, -6, -9 ], [ -3, -5 ], [ -7, -8 ], [ -10 ]);
gap> AsTransformation(f);
fail</Example>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="AsBipartition">
  <ManSection>
    <Oper Name="AsBipartition" Arg="f[, n]"/>
    <Returns>A bipartition.</Returns>
  <Description>
  <C>AsBipartition</C> 
  returns the bipartition, permutation, transformation, or partial permutation,
  as a bipartition. 
  
  There are several possible arguments for <C>AsBipartition</C>:
  <List>
    <Mark>for permutations</Mark>
    <Item>
      If <A>f</A> is a permutation and <A>n</A> is a non-negative integer, then 
      <C>AsBipartition(<A>f</A>, <A>n</A>)</C> returns the bipartition
      on <C>[1..<A>n</A>]</C> with classes <C>[i, i^<A>f</A>]</C>
      for all <C>i=1..n</C>.<P/>
      
      If no non-negative integer <A>n</A> is specified, then
      the largest moved point of <A>f</A> is used as the value for <A>n</A>; see
      <Ref Func="LargestMovedPoint" Label="for a permutation"/>.
    </Item>
    <Mark>for transformations</Mark>      
    <Item>
      If <A>f</A> is a transformation and <A>n</A> is a non-negative integer
      such that <A>f</A> is a transformation of <C>[1..<A>n</A>]</C>, then
      <C>AsTransformation</C> returns the bipartition with classes
      <M>(i)f^-1\cup \{i\}</M> for all <C>i</C> in the image of <A>f</A>.
      
      If the non-negative integer <A>n</A> is not specified, then the
      internal degree of <A>f</A> is used as the value for <A>n</A>.
    </Item> 
    <Mark>for partial permutations</Mark>
    <Item>
      If <A>f</A> is a partial permutation <A>f</A> and <A>n</A> is a
      non-negative integer, then <C>AsBipartition</C> returns the bipartition 
      with classes <C>[i, i^<A>f</A>]</C> for <C>i</C> in <C>[1..<A>n</A>]</C>. 
      Thus the degree of the returned bipartition is the maximum of <A>n</A>
      and the values <C>i^<A>f</A></C> where <C>i</C> in <C>[1..<A>n</A>]</C>.

      If the optional argument <A>n</A> is not present, then the default value
      of the maximum of the largest moved point and the largest image of a
      moved point of <A>f</A> plus <C>1</C> is used.
    </Item>
    <Mark>for a bipartition</Mark>
    <Item>
      not yet implemented.
    </Item>
  </List>
  <Example>
gap> f:=Transformation( [ 3, 5, 3, 4, 1, 2 ] );;
gap> AsTransformation(f, 5);
Transformation( [ 3, 5, 3, 4, 1 ] )
gap> AsTransformation(f, 10);
Transformation( [ 3, 5, 3, 4, 1, 2 ] )
gap> AsTransformation((1, 3)(2, 4));
Transformation( [ 3, 4, 1, 2 ] )
gap> AsTransformation((1, 3)(2, 4), 10);
Transformation( [ 3, 4, 1, 2 ] )
gap> f:=PartialPerm( [ 1, 2, 3, 4, 5, 6 ], [ 6, 7, 1, 4, 3, 2 ] );
[5,3,1,6,2,7](4)
gap> AsTransformation(f, 11);
Transformation( [ 6, 7, 1, 4, 3, 2, 11, 11, 11, 11, 11 ] )
gap> AsPartialPerm(last, DomainOfPartialPerm(f));
[5,3,1,6,2,7](4)
gap> AsTransformation(f, 14);
Transformation( [ 6, 7, 1, 4, 3, 2, 14, 14, 14, 14, 14, 14, 14, 14 ] )
gap> AsPartialPerm(last, DomainOfPartialPerm(f));
[5,3,1,6,2,7](4)
gap> AsTransformation(f);
Transformation( [ 6, 7, 1, 4, 3, 2, 8, 8 ] )
gap> AsTransformation(Transformation( [ 1, 1, 2 ] ), 0);
IdentityTransformation()</Example>
  </Description>
  </ManSection>

    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="IsTransBipartition">
  <ManSection>
    <Prop Name="IsTransBipartition" Arg="f"/>
    <Returns><K>true</K> or <K>false</K>.</Returns>
    <Description>
      
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="IsPermBipartition">
  <ManSection>
    <Prop Name="IsPermBipartition" Arg="f"/>
    <Returns><K>true</K> or <K>false</K>.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="BipartitionByIntRep">
  <ManSection>
    <Oper Name="BipartitionByIntRep" Arg="list"/>
    <Oper Name="BipartitionByIntRepNC" Arg="list"/>
    <Returns>A bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="PermLeftQuoBipartitionNC">
  <ManSection>
    <Func Name="PermLeftQuoBipartitionNC" Arg="f, g"/>
    <Returns>A permutation.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="IdentityBipartition">
  <ManSection>
    <Func Name="IdentityBipartition" Arg="n"/>
    <Returns>The identity bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="RankOfBipartition">
  <ManSection>
    <Attr Name="RankOfBipartition" Arg="f"/>
    <Attr Name="NrTransverseBlocks" Arg="f"/>
    <Returns>The rank of a bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="DegreeOfBipartition">
  <ManSection>
    <Attr Name="DegreeOfBipartition" Arg="f"/>
    <Returns>The degree of a bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="Bipartition">
  <ManSection>
    <Func Name="Bipartition" Arg="classes"/>
    <Func Name="BipartitionNC" Arg="classes"/>
    <Returns>A bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="ExtRepBipartition">
  <ManSection>
    <Attr Name="ExtRepBipartition" Arg="f"/>
    <Returns>A partition of <C>[1..n]</C>.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="LeftProjection">
  <ManSection>
    <Attr Name="LeftProjection" Arg="f"/>
    <Returns>A bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="RightProjection">
  <ManSection>
    <Attr Name="RightProjection" Arg="f"/>
    <Returns>A bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="InverseOp">
  <ManSection>
    <Attr Name="InverseOp" Arg="f" Label="for a bipartition"/>
    <Returns>A bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="RandomBipartition">
  <ManSection>
    <Attr Name="RandomBipartition" Arg="f"/>
    <Returns>A bipartition.</Returns>
    <Description>
    </Description>
  </ManSection>
<#/GAPDoc>

