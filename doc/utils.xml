
<#GAPDoc Label="CitrusMakeDoc">
  <ManSection>
    <Func Name="CitrusMakeDoc" Arg=""/>
    <Description>
      this function should be called with no argument to compile the 
      &Citrus; documentation. The same effect can be
      achieved by entering:

      <Log>
MakeGAPDocDoc(Concatenation(PackageInfo("citrus")[1]!.
 InstallationPath, "/doc"), "citrus.xml", [
 "utils.xml", "greens.xml", "orbits.xml", "properties.xml",
 "transform.xml"], "citrus", "MathJax");;</Log>

      at the &GAP; prompt. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="CitrusTestAll">
  <ManSection>
    <Func Name="CitrusTestAll" Arg=""/>
    <Description>
      this function should be called with no argument to comprehensively
      test that &Citrus; is working correctly. These tests
      should take no more than 1 minute to complete. The same effect can be
      achieved by entering:

      <Log>Read(Filename(DirectoriesPackageLibrary("citrus","tst"),"testall.g"));;</Log>

      at the &GAP; prompt. 
      To quickly test that &Citrus; is installed correctly
      use <Ref Func="CitrusTestInstall"/>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="CitrusTestManualExamples">
  <ManSection>
    <Func Name="CitrusTestManualExamples" Arg=""/>
    <Description>
      this function should be called with no argument to test the examples in
      the &Citrus; manual. These tests
      should take no more than a few seconds to complete. The same 
      effect can be achieved by entering:

      <Log>SizeScreen([80]); SetInfoLevel(InfoWarning, 0);
TestManualExamples(Concatenation(PackageInfo("citrus")[1]!.
InstallationPath, "/doc"), "citrus.xml", 
["utils.xml", "greens.xml",
"orbits.xml", "properties.xml", "transform.xml"]);</Log>

      at the &GAP; prompt. 
      To more comprehensively test that &Citrus; is installed
      correctly use <Ref Func="CitrusTestAll"/>. See also <Ref
      Func="CitrusTestInstall"/>.
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="CitrusTestInstall">
  <ManSection>
    <Func Name="CitrusTestInstall" Arg=""/>
    <Description>
      this function should be called with no argument to test your installation
      of &Citrus; is working correctly. These tests
      should take no more than a fraction of a second to complete. The same 
      effect can be achieved by entering:

<Log>ReadTest(Filename(DirectoriesPackageLibrary("citrus","tst"),"testinstall.tst"));;</Log>

      at the &GAP; prompt. 
      To more comprehensively test that &Citrus; is installed
      correctly use <Ref Func="CitrusTestAll"/>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="DClass">
  <ManSection>
    <Func Name="DClass" Arg="arg"/>
    <Description>
      returns the result of  
      <Ref Oper="GreensDClassOfElement" BookName="ref"/>, 
      <Ref Oper="DClassOfRClass"/>, <Ref Oper="DClassOfLClass"/>, or 
      <Ref Oper="DClassOfHClass"/> if <C>arg</C> is a transformation semigroup
      and a transformation, a &R;-class, a
      &L;-class, or an &H;-class,
      respectively. <P/>

      See also <Ref Func="DClassNC"/>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="DClassNC">
  <ManSection>
    <Func Name="DClassNC" Arg="S, f"/>
    <Description>
      returns the result of  <Ref Oper="GreensDClassOfElementNC"/>, 
      if <A>S</A> is a transformation semigroup
      and <A>f</A> a transformation.<P/>


      See also <Ref Func="DClass"/>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="Degree">
  <ManSection>
    <Func Name="Degree" Arg="obj"/>
    <Description>
      returns the result of 
      <Ref Oper="DegreeOfTransformation" BookName="ref"/>, 
      if <A>obj</A> is a transformation semigroup
      and 
      <Ref Oper="DegreeOfTransformationSemigroup" BookName="ref"/> 
      if <A>obj</A> a transformation.
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="Rank">
  <ManSection>
    <Func Name="Rank" Arg="f"/>
    <Description>
      returns the result of 
      <Ref Oper="RankOfTransformation" BookName="ref"/>, 
      if <A>f</A> is a transformation.
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="Generators">
  <ManSection>
    <Func Name="Generators" Arg="s"/>
    <Description>
      returns the result of 
      <Ref Attr="GeneratorsOfMonoid" BookName="ref"/>, 
      if <C>s</C> is a transformation monoid and returns the result of 
      <Ref Attr="GeneratorsOfSemigroup" BookName="ref"/> 
      if <C>s</C> is a transformation semigroup but not a transformation 
      monoid. 
      <Example> 
gap> M:=Monoid(Transformation( [ 1, 4, 6, 2, 5, 3, 7, 8, 9, 9 ] ),
> Transformation( [ 6, 3, 2, 7, 5, 1, 8, 8, 9, 9 ] ) );;
gap> GeneratorsOfSemigroup(M);
[ Transformation( [ 1 .. 10 ] ), 
  Transformation( [ 1, 4, 6, 2, 5, 3, 7, 8, 9, 9 ] ), 
  Transformation( [ 6, 3, 2, 7, 5, 1, 8, 8, 9, 9 ] ) ]
gap> GeneratorsOfMonoid(M);   
[ Transformation( [ 1, 4, 6, 2, 5, 3, 7, 8, 9, 9 ] ), 
  Transformation( [ 6, 3, 2, 7, 5, 1, 8, 8, 9, 9 ] ) ]
gap> Generators(M);
[ Transformation( [ 1, 4, 6, 2, 5, 3, 7, 8, 9, 9 ] ), 
  Transformation( [ 6, 3, 2, 7, 5, 1, 8, 8, 9, 9 ] ) ]
gap> S:=Semigroup(Generators(M));;
gap> Generators(S);
[ Transformation( [ 1, 4, 6, 2, 5, 3, 7, 8, 9, 9 ] ), 
  Transformation( [ 6, 3, 2, 7, 5, 1, 8, 8, 9, 9 ] ) ]
gap> GeneratorsOfSemigroup(S);
[ Transformation( [ 1, 4, 6, 2, 5, 3, 7, 8, 9, 9 ] ), 
  Transformation( [ 6, 3, 2, 7, 5, 1, 8, 8, 9, 9 ] ) ]</Example>
   </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="HClass">
  <ManSection>
    <Func Name="HClass" Arg="S, f"/>
    <Description>
      returns the result of 
      <Ref Oper="GreensHClassOfElement" BookName="ref"/>, 
      if <A>S</A> is a transformation semigroup and <A>f</A> is a
      transformation.<P/> See also <Ref Func="HClassNC"/>. 
   </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="HClassNC">
  <ManSection>
    <Func Name="HClassNC" Arg="S, f"/>
    <Description>
      returns the result of 
      <Ref Oper="GreensHClassOfElementNC"/>, 
      if <A>S</A> is a transformation semigroup and <A>f</A> is a
      transformation. <P/>
      See also <Ref Func="HClass"/>. 
   </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="InfoCitrus">
  <ManSection>
    <InfoClass Name="InfoCitrus"/>
    <Description>
    is the info class (see <Ref Subsect="Info Functions" BookName="ref"/>) of 
    &Citrus;. The info level is initially set to 0 and no info messages are
    displayed.
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="LClass">
  <ManSection>
    <Func Name="LClass" Arg="arg"/>
    <Description>
      returns the result of <Ref Oper="GreensLClassOfElement" BookName="ref"/>, 
      or <Ref Oper="LClassOfHClass"/> if <A>arg</A> is a transformation
      semigroup and a transformation, or an &H;-class, 
      respectively. <P/>

      See also <Ref Func="LClassNC"/>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="LClassNC">
  <ManSection>
    <Func Name="LClassNC" Arg="S, f"/>
    <Description>
      returns the result of 
      <Ref Oper="GreensLClassOfElementNC"/>, 
      if <A>S</A> is a transformation semigroup and <A>f</A> is a
      transformation. See also <Ref Func="LClass"/>. 
   </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="RandomTransformationMonoid">
  <ManSection>
    <Func Name="RandomTransformationMonoid" Arg="m, n"/>
    <Func Name="RandomTransformationSemigroup" Arg="m, n"/>
    <Description>
      returns a random transformation monoid or semigroup of degree <A>n</A> 
      with <A>m</A> generators.
      <Example>
gap&gt; S:=RandomTransformationMonoid(5,5);
&lt;monoid with 5 generators&gt;
gap&gt; S:=RandomTransformationSemigroup(5,5);
&lt;semigroup with 5 generators&gt;</Example>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="RClass">
  <ManSection>
    <Func Name="RClass" Arg="arg"/>
    <Description>
      returns the result of <Ref Oper="GreensRClassOfElement" BookName="ref"/>, 
      or <Ref Oper="RClassOfHClass"/> if <A>arg</A> is a transformation
      semigroup and a transformation, or an &H;-class, 
      respectively. <P/>

      See also <Ref Func="RClassNC"/>. 
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="RClassNC">
  <ManSection>
    <Func Name="RClassNC" Arg="S, f"/>
    <Description>
      returns the result of 
      <Ref Oper="GreensRClassOfElementNC"/>, 
      if <A>S</A> is a transformation semigroup and <A>f</A> is a
      transformation. <P/>See also <Ref Func="RClass"/>. 
   </Description>
  </ManSection>
<#/GAPDoc>

#EOF
