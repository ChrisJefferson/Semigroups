#############################################################################
##
#W  ideals.xml
#Y  Copyright (C) 2014                                   James D. Mitchell
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="GeneratorsOfSemigroupIdeal">
  <ManSection>
    <Attr Name="GeneratorsOfSemigroupIdeal" Arg="I"/>
    <Returns>The generators of an ideal of a semigroup.</Returns>
    <Description>
      This function returns the generators of the two-sided ideal <A>I</A>,
      which were used to defined <A>I</A> at its point of creation. <P/>

      If <A>I</A> is an ideal of a semigroup, then <A>I</A> is defined to be the
      least 2-sided ideal of a semigroup <C>S</C> containing a set <C>J</C> of
      elements of <C>S</C>. The set <C>J</C> is said to <E>generate</E> <A>I</A>. 
      <P/>

      The notion of the generators of an ideal is distinct from the notion of
      the generators of a semigroup or monoid.  In particular, the semigroup
      generated by the generators of an ideal is not, in general, equal to that
      ideal. Use <Ref Attr="GeneratorsOfSemigroup" BookName="ref"/> to obtain a
      semigroup generating set for an ideal, but beware that this can be very
      costly. 

      <Example><![CDATA[
gap> S:=Semigroup(
> Bipartition( [ [ 1, 2, 3, 4, -1 ], [ -2, -4 ], [ -3 ] ] ), 
> Bipartition( [ [ 1, 2, 3, -3 ], [ 4 ], [ -1 ], [ -2, -4 ] ] ), 
> Bipartition( [ [ 1, 3, -2 ], [ 2, 4 ], [ -1, -3, -4 ] ] ), 
> Bipartition( [ [ 1 ], [ 2, 3, 4 ], [ -1, -3, -4 ], [ -2 ] ] ), 
> Bipartition( [ [ 1 ], [ 2, 4, -2 ], [ 3, -4 ], [ -1 ], [ -3 ] ] ) );;
gap> I:=SemigroupIdeal(S, S.1*S.2*S.5);
<regular bipartition semigroup ideal on 4 pts with 1 generator>
gap> GeneratorsOfSemigroupIdeal(I);
[ <bipartition: [ 1, 2, 3, 4, -4 ], [ -1 ], [ -2 ], [ -3 ]> ]
gap> I=Semigroup(GeneratorsOfSemigroupIdeal(I));
false]]></Example>
    </Description>
  </ManSection>
<#/GAPDoc>

