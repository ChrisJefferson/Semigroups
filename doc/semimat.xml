#############################################################################
##
#W  semimat.xml
#Y  Copyright (C) 2014                                    Markus Pfeiffer
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################
##

<#GAPDoc Label="MatrixSemigroup">
<ManSection>
  <Attr Name="MatrixSemigroup" Arg=""/>
  <Returns>A semigroup object for the semigroup generated by gens</Returns>
  <Description>
    This is the kitchen-sink matrix semigroup creation function. It is designed
    to make it easy to create matrix semigroups without having to go through creating
    matrix objects first. 
    <Example><![CDATA[
gap> S := MatrixSemigroup(Z(4) * [[1,0,0], [1,1,0], [0,1,0]],
>                         Z(4) * [[0,0,0],[0,0,1],[0,1,0]]);
<semigroup of 3x3 matrices over GF(2^2) with 2 generators>
gap>
    ]]></Example>
    <M>S</M> is now a semigroup object for all intents and purposes of
    &Semigroups;
   To help <Ref Func="MatrixSemigroup"/> along with creating the semigroup
   you can give it optional arguments to specify the field that the matrices
   are supposed to have entries in and the dimension of the matrix.

   <Example><![CDATA[
gap> S := MatrixSemigroup([Z(4) * [[1,0,0], [1,1,0], [0,1,0]],
>                          Z(4) * [[0,0,0],[0,0,1],[0,1,0]]], GF(4), 3);
<semigroup of 3x3 matrices over GF(2^2) with 2 generators>
gap>
  ]]></Example>
  Note that for this usage the generators have to be given as a list as
  the first argument to <Ref Func="MatrixSemigroup"/>.

  </Description>
</ManSection>
<#/GAPDoc>
