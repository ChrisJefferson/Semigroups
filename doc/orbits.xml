
<#GAPDoc Label="GradedImagesOfTransSemigroup">
  <ManSection><Heading>Graded images and kernels</Heading>
  <Attr Name="GradedImagesOfTransSemigroup" Arg="S"/>
  <Attr Name="GradedKernelsOfTransSemigroup" Arg="S"/>
  <Description>
  <C>GradedImagesOfTransSemigroup</C> returns a list where the <C>i</C>th 
  entry is a list of all the images of transformations in <A>S</A> with rank 
  <C>i</C>.  
  <P/>
  
  <C>GradedKernelsOfTransSemigroup</C> returns a list where the <C>i</C>th 
  entry is a list of the values of <Ref Func="CanonicalTransSameKernel"/> for
  all transformations in <A>S</A> with rank <C>i</C>.
  <P/>

  See also <Ref Attr="ImagesOfTransSemigroup"/> and 
  <Ref Attr="KernelsOfTransSemigroup"/>.
  <Example>
gap> S:=Semigroup(Transformation( [ 1, 5, 1, 1, 1 ] ), 
> Transformation( [ 4, 4, 5, 2, 2 ] ));;
gap> GradedImagesOfTransSemigroup(S);
[ [ [ 1 ], [ 4 ], [ 2 ], [ 5 ] ], [ [ 1, 5 ], [ 2, 4 ] ], 
[ [ 2, 4, 5 ] ], [  ], [  ] ]
gap> GradedKernelsOfTransSemigroup(S);
[ [ [ [ 1, 2, 3, 4, 5 ] ] ], 
[ [ [ 1, 3, 4, 5 ], [ 2 ] ], [ [ 1, 2, 3 ], [ 4, 5 ] ] ], 
[ [ [ 1, 2 ], [ 3 ], [ 4, 5 ] ] ], [  ], [  ] ]</Example> 
  </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="ImagesOfTransSemigroup">
  <ManSection><Heading>Images and kernels</Heading>
  <Attr Name="ImagesOfTransSemigroup" Arg="S[, n]"/>
  <Attr Name="KernelsOfTransSemigroup" Arg="S[, n]"/>
  <Description>
  <C>ImagesOfTransSemigroup</C> returns the <Package>orb</Package> package 
  <Ref Func="Orb" BookName="orb"/> object:
  <Display>
    Orb(S, [1..Degree(S)], OnSets);
  </Display>
  <P/>
  
  <C>KernelsOfTransSemigroup</C> returns the <Package>orb</Package>
  package <C>Orb</C> object:
  <Display>
    Orb(S, [[1],..,[Degree(S)]], OnKernelsAntiAction);
  </Display>
  <P/>
  If the optional second argument <C>n</C> (a positive integer) is present, 
  then only the images or kernels of size at least <C>n</C> are found.<P/>
  
  See also <Ref Func="GradedImagesOfTransSemigroup"/> and 
  <Ref Func="GradedKernelsOfTransSemigroup"/>.
  <Example>
    gap>  S:=Semigroup([ Transformation( [ 6, 4, 4, 4, 6, 1 ] ), 
    > Transformation( [ 6, 5, 1, 6, 2, 2 ] ) ];;
    gap> ImagesOfTransSemigroup(S, 6);
    
    gap> ImagesOfTransSemigroup(S, 5);
      
    gap> ImagesOfTransSemigroup(S, 4);
    
    gap> ImagesOfTransSemigroup(S, 3);
   
    gap> ImagesOfTransSemigroup(S, 2);
    
    gap> ImagesOfTransSemigroup(S, 1);
   
    gap> ImagesOfTransSemigroup(S);
    
  </Example> 
  </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="OnKernelsAntiAction">
  <ManSection> 
    <Oper Name="OnKernelsAntiAction" Arg="ker, f"/>
    <Description>
    returns <C>CanonicalTransSameKernel(f*g)</C> when <A>f</A> is a
    transformation and <A>g</A> is a transformation with
    <C>CanonicalTransSameKernel(<A>g</A>)=ker</C>.
    See <Ref Func="CanonicalTransSameKernel"/>.
    <Example>
    </Example>
    </Description>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label="StrongOrbitsInForwardOrbit">
  <ManSection> <Oper Name="StrongOrbitsInForwardOrbit" Arg="o"/>
  <Description>
  returns a list of the strong orbits contained in the <Package>orb</Package>
  package orbit <C>o</C> provided that <C>o</C> was created with the 
  option <C>orbitgraph</C> set to <C>true</C>. <P/>
  <Example>
    gap> new example required
  </Example>
  </Description>
  </ManSection>
<#/GAPDoc>
