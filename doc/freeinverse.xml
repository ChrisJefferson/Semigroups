~
~
~
~
~
#############################################################################
##
#W  freeinverse.xml
#Y  Copyright (C) 2011-13           
##
##  Licensing information can be found in the README file of this package.
##
#############################################################################


<#GAPDoc Label="FreeInverse" >
<ManSection>
    <Oper Name = "FreeInverseSemigroup" Arg = "rank[, name]" />
    <Oper Name = "FreeInverseSemigroup" Arg = "name1, name2, ..." />
    <Oper Name = "FreeInverseSemigroup" Arg = "names" />
    <Returns> A Free Inverse Semigroup. </Returns>
    <Description>
     Returns a Free Inverse Semigroup on <C>rank</C> generators, where 
      <C>rank</C> is a finite positive integer. If <C>rank</C> is not 
      specified the number of names is used. 

      The internal representation is based on Munn tree diagrams, for
      reference see J. Howie Fundamentals of Semigroup Theory.
    </Description>
    <Example>
      gap> S := FreeInverseSemigroup(7);
      &lt; free inverse semigroup on the generators [ x1, x2, x3, x4, x5, x6, x7 ]>
      gap> S := FreeInverseSemigroup(7,"s");
      &lt; free inverse semigroup on the generators [ s1, s2, s3, s4, s5, s6, s7 ]>
      gap> S := FreeInverseSemigroup("a", "b", "c");
      &lt; free inverse semigroup on the generators [ a, b, c ]>
      gap> S := FreeInverseSemigroup(["a", "b", "c"]);
      &lt; free inverse semigroup on the generators [ a, b, c ]>
    </Example>
  </ManSection>
<#/GAPDoc>

<#GAPDoc Label = "FreeInverseSemiCF" >
  <ManSection>
    <Oper Name = "FreeInverseSemiCanonicalForm" Arg = "s"/>
    <Returns> A Free Inverse Semigroup elemenet. </Returns>
    <Description>
      For a Free Inverse Semigroup element <C>s</C>,
      <A>FreeInverseSemiCanonicalForm</A> puts the element into
      a canonical form. Which is unique up to rearranging 
      idempotents in the product.
    </Description>
    <Example>
      gap> S := FreeInverseSemigroup(3);
      &lt; free inverse semigroup on the generators [ x1, x2, x3 ]>
      gap> x := S.1;
      x1
      gap> y := S.2;
      x2
      gap> FreeInverseSemiCanonicalForm(x^3 *y^3);
      "x1x1x1x2x2x2x2^-1x2^-1x2^-1x1^-1x1^-1x1^-1x1x1x1x2x2x2"
    </Example>
  </ManSection>
<#/GAPDoc>
