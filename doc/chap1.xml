  <Chapter Label="semigroups">
  <Heading>The &Semigroups; package</Heading>
  <Index Key="Semigroups">&Semigroups; package overview</Index>	
    
    This is the manual for the &Semigroups; package version &VERSION;.
    &Semigroups; &VERSION; is an updated and expanded version of the 
    <URL Text="Monoid package for GAP 3">
      http://schmidt.nuigalway.ie/monoid/index.html</URL> by Goetz Pfeiffer,
    Steve A. Linton, Edmund F. Robertson, and Nik Ruskuc and
    the <URL Text="Monoid package for GAP 4">
      http://www-history.mcs.st-and.ac.uk/~jamesm/monoid/index.html</URL> by
    J.  D. Mitchell.<P/>

    Some of the theory behind the algorithms in &Semigroups; for computing with
    semigroups of transformations and partial permutations is described in 
    <Cite Key="pfeiffer1"/> and described in <Cite Key="pfeiffer2"/>.  Another
    reference is <Cite Key="lallement"/>. A reference for free inverse
    semigroups is Section 5.10 in <Cite Key="howie"/>. The functions for
    finding a smaller degree partial permutation representation of an inverse
    semigroup are based on <Cite Key="Schein1992aa"/>.
    <P/> 
    
    The functionality of &Monoid; 3.1.4 for &GAP; 4 has been split between the
    &GAP; 4.5 packages &Semigroups; and &Comatose;.

    &Semigroups; &VERSION; retains all the functionality of the original
    &Monoid; for &GAP; 3; and many of those functions
    from &Monoid; 3.1.4 not involved in the computation of automorphism groups
    of semigroups. The &Comatose; package retains those functions from &Monoid;
    3.1.4 used to compute automorphism groups of transformation semigroups. <P/>

    &noindent; &Semigroups; &VERSION; contains more efficient methods than those
    available in the &GAP; library (and in many cases more efficient than any
    other software) for creating semigroups of transformations and partial
    permutations, calculating their Green's classes, size, elements, group of
    units, minimal ideal, and testing membership, finding the inverses of a
    regular element, and factorizing elements over the generators, and many
    more; see Chapters <Ref Chap="create"/> and  <Ref Chap="green"/>. There are
    also methods for testing if a semigroup satisfies a particular property,
    such as if it is regular, simple, inverse, completely regular, and a
    variety of further properties; see Chapter <Ref Chap="green"/>. 
    Several large catalogues of examples is provided; see Sections <Ref
      Sect="Examples"/> and <Ref Sect="Catalogues"/>.  &Semigroups; also
    provides abbreviated names for some
    of the commonly used &GAP; library functions related to semigroups, and
    functions to read and write large collections of transformations or partial
    permutations to a file; see <Ref Func="ReadGenerators"/> and <Ref
      Func="WriteGenerators"/>. 
    <P/>

    There are also functions in &Semigroups; to define and manipulate free
    inverse semigroups and their elements; this part of the package was written
    by Julius Jonu&#353;as.<P/>

    &noindent; The &Semigroups; package is written &GAP; code and 
    requires the &Orb;, &IO;, and &GENSS;  packages. The &Orb; package is used
    to efficiently compute orbits in semigroups of transformations and partial
    permutations, and these methods underpin many of the features of
    &Semigroups;.
    The &IO; package is used to read and write transformations and partial
    permutations to a file.
    The &Grape; package is used in the function <Ref Oper="MunnSemigroup"/> but
    nowhere else in &Semigroups;. If &Grape; is not fully installed, then
    &Semigroups; can be used as normal with the exception that the operation
    <Ref Oper="MunnSemigroup"/> does not work.  <P/>
    
    &Semigroups; is still under development, and so some features may not
    function as expected. At the present time, I do not know of any errors or
    serious issues with &Semigroups;.  If you find a bug or an issue with the
    package, then please let me know by emailing me the details at:
    <Email>jdm3@st-and.ac.uk</Email>.<P/>

    For more details about semigroups in &GAP; or Green's relations in
    particular, see <Ref Sect="Semigroups" BookName="ref"/> or 
    <Ref Sect="Green's Relations" BookName="ref"/>.

  <Section Label="install">
    <Heading>Installing &Semigroups;</Heading>

    In this section we give a brief description of how to start using
    &Semigroups;. If you have any problems getting &Semigroups; working, then
    you could try emailing me at <Email>jdm3@st-and.ac.uk</Email>. <P/>

    It is assumed that you have a working copy of &GAP; with version number 
    4.7 or higher. The most up-to-date version of &GAP; and instructions on
    how to install it can be obtained from the main &GAP; webpage
    &vspace;<P/>&noindent;&vspace;
    <URL>http://www.gap-system.org</URL><P/>

    &noindent; The following is a summary of the steps that should lead to a
    successful installation of &Semigroups;:
    <List>
      <Item> download and install the &GENSS; package version 
      &GENSSVERS; or higher. For more details go to:
      &vspace;<P/>&noindent; 
      <URL>http://www-groups.mcs.st-and.ac.uk/~neunhoef/Computer/Software/Gap/genss.html
      </URL><P/>
      </Item>
      <Item> download and install the &Orb; package version 
      &ORBVERS; or higher. For more details go to:
      &vspace;<P/>&noindent; 
      <URL>http://www-groups.mcs.st-and.ac.uk/~neunhoef/Computer/Software/Gap/orb.html
      </URL><P/>
      &noindent; Note that &Orb; and &Semigroups; both perform better if &Orb;
      is compiled. 
      </Item>

     <Item> download and install the &IO; package version                 
      &IOVERS; or higher. For more details go to:
      &vspace;<P/>&noindent;
      <URL>http://www-groups.mcs.st-and.ac.uk/~neunhoef/Computer/Software/Gap/ io.html
      </URL>
      </Item>

      <Item>  if you want to be able to calculate the Munn semigroup of a
        semilattice <Ref Oper="MunnSemigroup"/>, then download and fully
        install the &Grape; package version &GRAPEVERS; or higher.  For more
        details go to:&vspace;<P/>&noindent;
        <URL>http://www.maths.qmul.ac.uk/~leonard/grape/</URL><P/>
         If
    &Grape; is not fully installed, then &Semigroups; can be used as normal with the
    except that the operation <Ref Oper="MunnSemigroup"/> does not work.

      </Item>

      <Item> download the package archive <F>&ARCHIVENAME;.tar.gz</F> from
      &vspace;<P/>&noindent;&vspace;
      <URL>http://www-history.mcs.st-and.ac.uk/~jamesm/semigroups/index.html
      </URL>
      </Item>
    
      <Item> unzip and untar the file, this should create a directory called
      <C>&ARCHIVENAME;</C>.</Item>
    
      <Item> 
      locate the <C>pkg</C> directory of your &GAP; directory, which contains
      the directories <C>lib</C>, <C>doc</C> and so on. Move the directory
      <C>&ARCHIVENAME;</C> into the <C>pkg</C> directory.  
      </Item>

      <!--     <Item> to use the functions in &Semigroups; for partial permutations and
        inverse semigroups, you must compile the C part of the package 
        (in the "pkg" directory) by doing:
        <Listing>
<![CDATA[cd semigroups
./configure
make]]></Listing>
    Further information about this step can be found in Section <Ref Sect="Compiling"/>. 
    </Item>-->

    <Item> start &GAP; in the usual way.</Item>
  
    <Item> type <C>LoadPackage("semigroups");</C></Item>
    
    <Item> compile the documentation by using <Ref Func="SemigroupsMakeDoc"/>
    </Item>

  </List>

  <!--    <E><B>Please note that</B> &Semigroups; can only be used to compute with
      semigroups of partial permutations if it has been compiled.  </E><P/>-->

    Presuming that the above steps can be completed successfully you will be 
    running the &Semigroups; package!<P/>

    If you want to check that the package is working correctly, you
    should run some of the tests described in Section <Ref Sect="testing"/>.<P/>

  </Section>

  <!-- <Section Label="Compiling">
    <Heading>Compiling the kernel component of &Semigroups;</Heading>
As of version 0.7, the &Semigroups; package has a &GAP; kernel component in C which
should be compiled. This component contains low-level functions relating to
partial permutations and it is not possible to use these features or any
related features in &Semigroups; without compiling the package. It is possible to
run &Semigroups; without compiling it, but &Semigroups; is limited to computing with
transformation semigroups in this case.<P/>

To compile the GAP kernel component in the 'pkg' directory do:
<Listing>
<![CDATA[cd semigroups
./configure
make]]></Listing><P/>

If you installed the package in another 'pkg' directory than the standard 'pkg'
directory in your &GAP; installation, then you have to do two things. Firstly
during compilation you have to use the option '--with-gaproot=PATH' of the
'configure' script where 'PATH' is a path to the main GAP root directory (if
not given the default '../..' is assumed).<P/>

If you installed &GAP; on several architectures, you must execute the
configure/make step for each of the architectures. You can either do this
immediately after configuring and compiling GAP itself on this architecture, or
alternatively (when using version 4.5 of GAP or newer) set the environment
variable 'CONFIGNAME' to the name of the configuration you used when compiling
GAP before running './configure'.  Note however that your compiler choice and
flags (environment variables 'CC' and 'CFLAGS') need to be chosen to match the
setup of the original GAP compilation. For example you have to specify 32-bit
or 64-bit mode correctly!
</Section> -->
<Section Label="doc"><Heading>Compiling the documentation</Heading>

  To compile the documentation use <Ref Func="SemigroupsMakeDoc"/>. If you want
  to use the help system, it is essential that you compile the documentation. 

  <#Include Label="SemigroupsMakeDoc">

  </Section>
    
  <Section Label="testing"><Heading>Testing the installation</Heading>
    
    In this section we describe how to test that &Semigroups; is working as
    intended.  To test that &Semigroups; is installed correctly use 
    <Ref Func="SemigroupsTestInstall"/> or for more extensive tests use 
    <Ref Func="SemigroupsTestAll"/>. Please note that it will take a few seconds for
    <Ref Func="SemigroupsTestInstall"/> to finish and it will take no more than 1
    minute for <Ref Func="SemigroupsTestAll"/> to finish.<P/>

    Note that after calling <Ref Func="SemigroupsTestAll"/>, 
    <Ref Func="SemigroupsTestAll"/>, or <Ref Func="SemigroupsTestManualExamples"/>, the
    message <C>gzip: stdout: Broken pipe</C> might be displayed (several
    times). While this is unfortunate, it is not an error and should simply be
    ignored.  We hope to resolve this issue in the future.

    If something goes wrong, then please review the instructions in Section
    <Ref Sect="install"/> and ensure that &Semigroups; has been properly
    installed.  If you continue having problems, please email me at
    <Email>jdm3@st-and.ac.uk</Email>.

    <#Include Label="SemigroupsTestAll">
    <#Include Label="SemigroupsTestInstall">
    <#Include Label="SemigroupsTestManualExamples">

  </Section>

  <Section><Heading>More information during a computation</Heading>
    
    <#Include Label="InfoSemigroups">

  </Section>

    <Section><Heading>Reading and writing transformations and partial
      permutations to a file</Heading>
    The functions <Ref Func="ReadGenerators"/> and 
    <Ref Func="WriteGenerators"/> can be used to read or write transformations
    or partial permutations to a file. 
    <#Include Label="SemigroupsDir">
    <#Include Label="ReadGenerators">
    <#Include Label="WriteGenerators">
  </Section>

  <Section><Heading>Use &R;-classes not &L;-classes</Heading>
    It is harder for &Semigroups; to compute Green's &L;- and
    &H;-classes and the methods used to compute with
    Green's &R;- and &D;-classes are the most efficient in &Semigroups;.  Thus,
    if you are computing with a semigroup, wherever
    possible it is advisable to use the commands relating to Green's
    &R;- or &D;-classes rather than those relating to Green's &L;-  or
    &H;-classes. No such difficulties are present when computing with
    semigroups of partial permutations. <P/>
    
    The methods in &Semigroups; allow the computation of individual Green's
    classes without the need to compute all the elements of the underlying
    semigroup; see <Ref Oper="GreensRClassOfElementNC"/>.  It is also possible
    to compute all the &R;-classes, the number of elements and test membership
    in a transformation semigroup without computing all the elements; see, for
    example, <Ref Oper="GreensRClasses"/>, <Ref Attr="RClassReps"/>, 
    <Ref Func="IteratorOfRClassReps"/>, <Ref Func="IteratorOfRClasses"/>, or
    <Ref Func="NrRClasses"/>.  This may be useful if you want to study a very
    large semigroup where computing all the elements of the semigroup is
    infeasible.
  </Section>

  <Section><Heading>New methods for existing functions</Heading>
    In this section we list the functions from the &GAP; library (those
    available when &Semigroups; is not loaded) which have new methods in
    &Semigroups;.  Some of these new methods apply to a wider class of objects
    than the existing methods. Where this is the case, we give references to
    both the &Semigroups; documentation and the &GAP; manual; otherwise we may
    only give references to the &GAP; manual.<P/>

    &Semigroups; contains special methods for some &GAP; library functions, and
    so you might notice that &GAP; behaves differently when &Semigroups; is
    loaded. 
    For more details about semigroups in &GAP; or Green's relations in
    particular, see <Ref Sect="Semigroups" BookName="ref"/> or 
    <Ref Sect="Green's Relations" BookName="ref"/>.

    &Semigroups; contains functions synonymous to some of those define in the
    &GAP; library but, for the sake of convenience, they have abbreviated
    names; for further details see below.
  </Section>
</Chapter>
