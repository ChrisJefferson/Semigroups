<!DOCTYPE Book SYSTEM "gapdoc.dtd"
   [ <!ENTITY Citrus "<Package>Citrus</Package>">
     <!ENTITY Smallsemi "<Package>Smallsemi</Package>">
     <!ENTITY Monoid "<Package>Monoid</Package>">
     <!ENTITY Orb "<Package>Orb</Package>">
     <!ENTITY vspace "<Alt Only='LaTeX'>\vspace{\baselineskip}</Alt>">
     <!ENTITY noindent "<Alt Only='LaTeX'>\noindent</Alt>">
     <!ENTITY H "<Alt Only='HTML'>\(\mathcal{H}\)</Alt><Alt
     Only='Text'><E>H</E></Alt><Alt Only='LaTeX'><M>\mathcal{H}</M></Alt>">
     <!ENTITY R "<Alt Only='HTML'>\(\mathcal{R}\)</Alt><Alt
     Only='Text'><E>R</E></Alt><Alt Only='LaTeX'><M>\mathcal{R}</M></Alt>">
     <!ENTITY L "<Alt Only='HTML'>\(\mathcal{L}\)</Alt><Alt
     Only='Text'><E>L</E></Alt><Alt Only='LaTeX'><M>\mathcal{L}</M></Alt>">
     <!ENTITY D "<Alt Only='HTML'>\(\mathcal{D}\)</Alt><Alt
     Only='Text'><E>D</E></Alt><Alt Only='LaTeX'><M>\mathcal{D}</M></Alt>">
     <#Include Label="PKGVERSIONDATA">
   ]>

<Book Name="citrus">
<#Include SYSTEM="title.xml">

<TableOfContents/>

<Body>
  <#Include SYSTEM="intro.xml">
  
<Chapter Label="create"><Heading>Transformations and partial permutations
</Heading>
  A <E>transformation</E> is just a function from the set 
  <M>\{1,\ldots, n\}</M> to itself, and a <E>partial permutation</E> is an
  injective function from a subset of <M>\{1,\ldots, n\}</M> to 
  <M>\{1,\ldots, n\}</M> where <M>n</M> is a positive integer. 
  In this chapter, we describe functions for creating and determining
  fundamental properties of transformations and partial permutations.
  Semigroups in the &Citrus; package are semigroups of transformations and
  partial permutations, and so we describe how to create and manipulate these
  objects first.<P/>
  
  The functions described in this section relating to transformations extend 
  the functionality of &GAP; library; see also 
  <Ref Chap="Transformations" BookName="ref"/>.<P/>
  
  General introduction to partial perms such as that in Howie's book,
  including rank, domain, range, idempotent. JDM

  <Section><Heading>Creating transformations</Heading>
    In this section we describe the functions available in &Citrus; for
    creating transformations.  The following functions from the &GAP; reference
    manual are particularly relevant to this section:

    <List>
    <Item>
      <Ref Func="Transformation" BookName="ref"/>, 
    </Item>
    <Item>    
      <Ref Func="IdentityTransformation" BookName="ref"/>, 
    </Item>  
    <Item>
      <Ref Func="RandomTransformation" BookName="ref"/>,
    </Item>
    <Item>
      <Ref Func="AsTransformation" BookName="ref"/>.
    </Item>
    </List>   
    <#Include Label="ConstantTransformation"/> 	
    <#Include Label="Idempotent">
    <#Include Label="RandomIdempotent">
    <#Include Label="RandomTransformation">
  </Section>
  
  <Section><Heading>Creating partial permutations</Heading>
    In this section we describe the functions available in &Citrus; for
    creating partial permutations.  In addition to the functions described in
    this section, partial permutations can also be created from permutations
    and certain transformations;  see Section 
    <Ref Sect="Changing representation"/>.

    <#Include Label="PartialPerm">
    <#Include Label="RestrictedPartialPerm">
    <#Include Label="RandomPartialPerm">
  </Section>
  
  <Section><Heading>Properties of transformations</Heading>
    In this section we describe the functions available in
    &Citrus; for finding various properties of 
    transformations. <P/>

    In addition to those functions described below, &Citrus; 
    also contains a special method for
   <Ref Attr="RankOfTransformation" BookName="ref"/>. 

    <#Include Label="CanonicalTransSameKernel">
    <#Include Label="EvaluateWord">
    <#Include Label="Factorization">
    <#Include Label="IndexPeriodOfTransformation">
    <#Include Label="InversesOfTransformation">
    <#Include Label="IsInjectiveTransOnList">
    <#Include Label="IsRegularTransformation">
    <#Include Label="SmallestIdempotentPower">
  </Section>
   
  <Section><Heading>Properties of partial permutations</Heading>
    In this section we describe the functions available in &Citrus; for
    finding various properties of partial permutations. 
    <P/>

    <#Include Label="IsPartialPerm">
    <#Include Label="DomainOfPartialPerm">
    <#Include Label="RangeOfPartialPerm">
    <#Include Label="RangeSetOfPartialPerm">
    <#Include Label="FixedPointsOfPartialPerm">
    <#Include Label="DenseRangeList">
    <#Include Label="RankOfPartialPerm"/>
    <#Include Label="DegreeOfPartialPerm"/>

  </Section>
 
  <Section><Heading>Operators for transformations</Heading>
    <Index Key="^"><C>^</C></Index>
    <C><A>f</A> ^ <A>g</A></C>
    <P/>
    <Index Key="*"><C>*</C></Index>
    <Alt Only="LaTex">\noindent</Alt><C><A>f</A> * <A>g</A></C>
    <P/>
    
    &Citrus; contains more efficient methods than the &GAP;
    library for <Ref Oper="\*" BookName="ref"/> when <A>f</A> and <A>g</A> are
    transformations or permutations (and at least one of <A>f</A> and <A>g</A>
    is a transformation).<P/>

     <C><A>f</A>^<A>g</A></C> returns <C><A>g</A>^-1*<A>f</A>*<A>g</A></C> when 
     <A>f</A> is a transformation and <A>g</A> is a permutation 
     <Ref Oper="\^" BookName="ref"/>.
  </Section>
  <Section><Heading>Operators on partial permutations</Heading>
    <Index Key="^"><C>^</C></Index>
    <C><A>f</A> ^ <A>-1</A></C>
    <P/>
    <Alt Only="LaTex">\noindent</Alt><C><A>i</A> ^ <A>f</A></C>
    <P/>
    <Index Key="*"><C>*</C></Index>
    <Alt Only="LaTex">\noindent</Alt><C><A>f</A> * <A>g</A></C>
    <P/>


    <#Include Label="LeftOne">
  </Section>
 
  <Section Label="Changing representation">
    <Heading>Changing representations</Heading>
    It is possible to change the representation of certain transformations and
    partial permutations using the functions described in this section.  
    <#Include Label="AsPermOfKerImg">
    <#Include Label="AsPermutation">
    <#Include Label="AsPartialPerm">
    <#Include Label="AsTransformation">
  </Section>
  
  <Section><Heading>Actions and orbits</Heading>
    Some of the following actions and orbits of transformation semigroups are
    used by &Citrus; in the computation of Green's relations and to test if an
    arbitrary transformation semigroup has a particular property;  see Chapter
    <Ref Chap="green"/> and Chapter <Ref Chap="properties"/>; see <Ref
    Sect="Basic Actions" BookName="ref"/> and <Ref Func="Orb"
    BookName="orb"/>.  <P/>

    <#Include Label="GradedImagesOfTransSemigroup">
    <#Include Label="ImagesOfTransSemigroup">
    <#Include Label="OnKernelsAntiAction">
    <#Include Label="OrbSCC">
    <#Include Label="OrbSCCLookup">
    <#Include Label="OrbSCCTruthTable">
    <#Include Label="ReverseSchreierTreeOfSCC">
    <#Include Label="SchreierTreeOfSCC">
    <#Include Label="TraceSchreierTreeOfSCCBack">
    <#Include Label="TraceSchreierTreeOfSCCForward">
  </Section>	
</Chapter>

<#Include SYSTEM "semigroups.xml">

<Chapter Label="green"><Heading>Green's classes</Heading>

  In this chapter we describe the functions in &Citrus; for computing Green's
  classes and related properties of semigroups. 

  <Section><Heading>Single Green's classes</Heading>
    <#Include Label="XClassOfYClass">
    <#Include Label="GreensXClassOfElement">
    <#Include Label="GreensXClassOfElementNC">
    <#Include Label="GroupHClass">
  </Section>

  <Section><Heading>Iterators and enumerators of Green's classes
  </Heading>

    <#Include Label="GreensXClasses">
    <#Include Label="IteratorOfXClassReps"> 
    <#Include Label="IteratorOfXClasses"> 
    <#Include Label="UnderlyingSemigroupOfIterator">
    <#Include Label="XClassReps">
  </Section>

  <Section><Heading>Properties and attributes of Green's classes</Heading>
    <#Include Label="\&lt;">
    <#Include Label="Idempotents">
    <#Include Label="IsGreensClassOfTransSemigp">
    <#Include Label="IsRegularXClass">
    <#Include Label="NrIdempotents">
    <#Include Label="NrRegularDClasses">
    <#Include Label="NrXClasses">
    <#Include Label="PartialOrderOfDClasses">
    <#Include Label="SchutzenbergerGroup">
  </Section>
</Chapter>


<Chapter Label="properties"><Heading>Properties and attributes of semigroups
</Heading>
              
  In this chapter, we describe the functions in &Citrus; that can be used to
  determine whether a transformation semigroup or monoid satisfies a given
  property. <P/>

<!--  The following statements provide methods to determine if an 
  arbitrary transformation semigroup <M>S</M> satisfies a particular 
  property by considering the action of the generators <M>\Omega</M>
  of <M>S</M> on the underlying set; for more details see 
  <Cite Key="largest"/>.<P/>

  <List>
  
    <Item> <M>S</M> is a left zero semigroup if and only if        
    <M>\textrm{im}(f)=\textrm{im}(g)</M> and <M>f^2=f</M> for 
    all <M>f, g\in\Omega</M>.
    </Item>
    
    <Item> <M>S</M> is a <E>right zero semigroup</E> if and only if  
    <M>\textrm{ker}(f)=\textrm{ker}(g)</M> and <M>f^2=f</M> for
    all <M>f, g\in\Omega</M>.
    </Item>

    <Item> <M>S</M> is simple if and only if     
    <M>\textrm{rank}(gf)=\textrm{rank}(f)=\textrm{rank}(g)</M> 
    for all <M>f, g\in\Omega</M>.
    </Item>
    
    <Item> <M>S</M> is completely regular if and only if 
    <M>\textrm{rank}(fgf)=\textrm{rank}(gf)</M> 
    for all <M>f, g\in\Omega</M>.
    </Item>
    
    <Item> <M>S</M> is inverse if and only if it is regular and 
    there is a bijection <M>\phi:\textrm{Kers}(S)\to\textrm{Ims}(S)
    </M> such that if <M>f\in S</M> with 
    <M>\textrm{im}(f)=\phi(\textrm{ker}(f))</M>, then   
    <M>\textrm{rank}(f^2)=\textrm{rank}(f)</M>. 
    </Item>
    
    <Item> <M>S</M> is a Clifford semigroup if and only if for all  
    <M>f, g\in\Omega</M> 
    <List>
      <Item> <M>\textrm{rank}(f^2)=\textrm{rank}(f)</M>;
      </Item>
      <Item> if <M>g^n</M> is an idempotent, then 
      <M>fg^n=g^nf</M>.
      </Item> 
    </List>
    </Item>
  </List>

    It is straightforward to verify that <M>S</M> is a group if and 
    only if for all <M>f, g\in\Omega</M> 
    
    <List>
      
      <Item> <M>\textrm{ker}(f)=\textrm{ker}(g)</M>;
      </Item>
      
      <Item> <M>\textrm{im}(f)=\textrm{im}(g)</M>;
      </Item> 
      
      <Item> <M>\textrm{rank}(f)=\textrm{rank}(g)</M>.
      </Item> 
  </List>-->

  <Section><Heading>Attributes of semigroups</Heading>
    In this section we describe the attributes <Ref Sect="Attributes"
    BookName="ref"/> of an arbitrary transformation semigroup that can be found
    using &Citrus;.
    <#Include Label="Degree">
    <#Include Label="Generators">
    <#Include Label="GroupOfUnits">
    <#Include Label="IdempotentGeneratedSubsemigp">
    <#Include Label="IrredundantGeneratingSubset">
    <#Include Label="MinimalIdeal">
    <#Include Label="MultiplicativeZero">
    <#Include Label="NrElementsOfRank">
    <#Include Label="Random">
    <#Include Label="Rank">
    <#Include Label="SmallGeneratingSet"> 
  </Section>
  
  <Section><Heading>Properties of semigroups</Heading>
    In this section we describe several properties 
    <Ref Sect="Properties" BookName="ref"/> of an
    arbitrary transformation semigroup that can be determined using
    &Citrus;.
    <#Include Label="IsBand">
    <#Include Label="IsBlockGroup">
    <#Include Label="IsBrandtSemigroup">
    <#Include Label="IsCliffordSemigroup">
    <#Include Label="IsCommutativeSemigroup">
    <#Include Label="IsCompletelyRegularSemigroup">
    <#Include Label="IsRTrivial">
    <#Include Label="IsGroupAsSemigroup">
    <#Include Label="IsIdempotentGenerated">
    <#Include Label="IsInverseSemigroup">
    <#Include Label="IsLeftSimple">
    <#Include Label="IsLeftZeroSemigroup">
    <#Include Label="IsMonogenicSemigroup">
    <#Include Label="IsMonoidAsSemigroup">
    <#Include Label="IsOrthodoxSemigroup">
    <#Include Label="IsRectangularBand">
    <#Include Label="IsRegularSemigroup">
    <#Include Label="IsRightZeroSemigroup">
    <#Include Label="IsSemilatticeAsSemigroup">
    <#Include Label="IsSimpleSemigroup">
    <#Include Label="IsSynchronizingSemigroup">
    <#Include Label="IsZeroGroup">
    <#Include Label="IsZeroRectangularBand">
    <#Include Label="IsZeroSemigroup">
    <#Include Label="IsZeroSimpleSemigroup">
  </Section>

  <Section><Heading>Changing the representation of a semigroup</Heading>
    <#Include Label="AntiIsomorphismTransformationSemigroup">
    <#Include Label="IsomorphismTransformationMonoid">
    <#Include Label="IsomorphismPermGroup">
  </Section>
</Chapter>
</Body>

<Bibliography Databases="citrus" />
<TheIndex/>

</Book>
  
